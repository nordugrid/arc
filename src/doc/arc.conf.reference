####################################################################
##
## This is the arc.conf REFERENCE DOCUMENT defining the configuration blocks and
## configuration options for the ARC services.
##
## WARNING: this file will not work as a configuration template!
## NEVER USE THIS DOCUMENT AS A CONFIGURATION FILE!
##
## The arc.conf configuration file consists of the following blocks 
##
##  [common]
##  [common/mapping]
##  [userlist:biousers]
##  [authgroup:allowedusers]
##  [lrms]
##  [lrms/ssh]
##  [arex]
##  [arex/cache]
##  [arex/data-staging]
##  [arex/ws]
##  [arex/ws/emies]
##  [arex/ws/cache]
##  [arex/ws/candypond]
##  [arex/ws/argus]
## TODO: add a new block for [arex/rest] 
##  [arex/jura]
##  [arex/jura/archiving]
##  [arex/jura/sgas:neic_sgas]
##  [arex/jura/apel:egi_prod_apel]
##  [arex/ganglia]
##  [gridftpd]
##  [gridftpd/jobs]
##  [gridftpd/filedir]
##  [infosys]
##  [infosys/ldap]
##  [infosys/ldap/bdii]
## TODO: merge [ldap] and [ldap/bdii]
##  [infosys/nordugrid]
##  [infosys/glue2]
##  [infosys/glue2/ldap]
##  [infosys/glue1]
##  [infosys/glue1/site:name]
##  [cluster]
## TODO: rename [cluster] as [infosys/cluster]
##  [queue:gridlong]
##  [datadelivery-service]
##  [acix-scanner]
##  [acix-index]
##  [nordugridmap]
##
## A block configures an ARC service, a service interface, a utility or a subsystem.
## Enabling (turning on) a functionality, a service or an interface requires the presence of the
## appropriate configuration block. To disable a service or an interface, simply delete or comment out
## with a "#" the related arc.conf block (you may need to rerun the corresponding startup script).
##
## As an example, in order to set up a minimalistic ARC CE with a WS-interface
## you need to configure at least the [common],[arex],[lrms],[arex/ws],
## [infosys],[infosys/glue2],[cluster] and [queue:name] blocks.
##
## As another example, when the ARC CE is configured according to the "classic" setup with
## gridftp-based jobsubmission interface and LDAP infosys publishing the nordugrid schema,
## the following blocks are needed: [common], [arex], [gridftpd], [gridftpd/jobs],
## [infosys], [infosys/ldap], [infosys/ldap/bdii], [infosys/nordugrid], [cluster] and [queue:name]
##
## A block is identified by its block header. A block header may consist of
## keywords and optionally block identifiers. Keywords may be separated by "/" 
## and used to label subblocks (e.g. [arex/jura]), while block identifiers
## are separated by ":" from keywords. For example, in the [queue:short] 
## block header 'queue' is a keyword while 'short' is an identifier, e.g. the name of the queue.
## Block headers must be UNIQUE.
##
## A block starts with a unique [blockheader] and ends where the next block starts, that is 
## at the next [blockheader] directive. A block may have sub-blocks e.g. [arex/ws].
##
## Configuration blocks contain (config option, config value) pairs following the syntax:
## config_option= value element [optional value element]  in single line 
## and everything is part of config value till the end of the line.
## Note that quotes around the configuration value(s) must NOT be used any longer.
## Commented out or unset configuration options take their default values!
## Note that the arc.conf is CASE-SENSITIVE!
##
## Configuration blocks related to authorization are ORDER-DEPENDENT! The authorization blocks 
## [userlist:name] and [authgroup:name] MUST appear before the [arex] or [gridftp] blocks. 
## Furthermore, the order of the authorization blocks itself may have influence over authorization decisions!
## On the other hand, the order of the config options within a specific block is irrelevant.
##
##
## Developers: This file is parsed by configuration validation script and so
##   it is important that it follows the agreed syntax: For each block or
##   option please add explanatory text with two ## followed by a space at the
##   beginning of the line and then an example with a single # and no spaces at
##   the beginning of the line. These examples are used as reference parameters
##   for the block and configuration option names!
##
## Below we give a detailed description of all the configuration options of the
## different configuration blocks. Every configuration option is described
## in a dedicated paragraph with the following reference notation:
##
## config_option_name = value [optional values]  - Here comes the explanation
## of the config option. Mandatory configuration options are indicated by an asterix prefix to the option name e.g.
## *mandatory_configoption vs. optional_configoption.
## The explanation is followed by the special keyword "multivalued" in a separate line to indicate 
## that it can be set multiple times (multivalued). Missing such keyword means the config option
## can only occur once in the arc.conf. By default the arc.conf config options are optional
## and single-valued. For some config options only a fix set of values are allowed. These are
## listed in a separate line after the "allowedvalues" keyword.
## The default of every config option is explicitly given in the "default:" line.
## The last line of the paragraph is always a valid example preceded by a single "#"
## here comes a valid example:
## multivalued
## type: e.g. string (types to be agreed later)
## allowedvalues: 12 34 56
## default: 34
#config_option_name=56
###########################################################################


### The [common] block ##############################################
## Common configuration affecting all ARC components, usually related to networking or security 
## or service behaviour.
## The common block options may be overridden by the specific sections of the components later.
## The [common] always appears at the beginning of the config file. The config options set within this block
## are available for all the other blocks thus shared by the different components of ARC.
#[common]

## hostname = string - The FQDN of the frontend on which the ARC services are deployed.
## default: the return value of the shell command hostname -f
#hostname=myhost.org
## CHANGE1: modified semantics, not mandatory any longer

## http_proxy = url - The http proxy server.
## default: not set
#http_proxy=proxy.mydomain.org:3128
## CHANGE4: moved here from the old [grid-manager] block

### X509 related parameters
## x509_host_key = path - (previously x509_user_key) Server credential location. Sets the full path to the host private key.
## These variables are similar to the GSI enviroment variable X509_USER_KEY
## If indicated, the variable can be set individually for each service/component in the corresponding block.
## default: /etc/grid-security/hostkey.pem
#x509_host_key=/etc/grid-security/hostkey.pem
## CHANGE5: renamed

## x509_host_cert = path - (previously x509_user_cert) Server credential location. Sets the full path to the host public certificate.
## These variables are similar to the GSI environment variable X509_USER_CERT
## If indicated, the variable can be set individually for each service/component in the corresponding block.
## default: /etc/grid-security/hostcert.pem
#x509_host_cert=/etc/grid-security/hostcert.pem
## CHANGE6: renamed

## x509_cert_dir = path  - Location of trusted CA certificates.
## This variable is similar to the GSI enviroment variable X509_CERT_DIR
## If indicated, the variable can be set individually for each service/component in the corresponding block.
## default: /etc/grid-security/certificates
#x509_cert_dir=/etc/grid-security/certificates

### VOMS related parameters
## x509_voms_dir = path - the path to the directory containing *.lsc files
## needed for checking validity of VOMS extensions.
## default: /etc/grid-security/vomsdir
#x509_voms_dir=/etc/grid-security/vomsdir
##
##
### end of the [common] block ##############################################


### The [common/mapping] block ##############################################
## This block defines the grid-identity to local unix identity mapping rules used by
## various ARC components.
#[common/mapping]
## CHANGE8: This is a new block

## gridmap = path - The gridmap file location. Preferably should be set in the [common] block but
## may be set here as well.
## default: /etc/grid-security/grid-mapfile
#gridmap=/etc/grid-security/grid-mapfile

## unixmap = [unixname][:unixgroup] rule - A more sophisticated way to map
##  Grid identity of client to local account. If client matches 'rule'
##  it's assigned specified unix identity or one generated by rule.
##  Mapping commands are processed sequentially and processing stops
##  at first successful one (like in [authgroup] section). For possible rules
##  read "ARC Computing Element. System Administrator guide" manual. All
##  rules defined in [authgroup] section can be used. There are also additional
##  rules which produce not only yes/no result but also give back user and
##  group names to which mapping should happen. The way it works is quite
##  complex so it is better to read full documentation.
##  For safety reasons if sophisticated mapping is used it is better to
##  finish mapping sequence with default mapping to nonexistent or safe
##  account.
## multivalued
## default: not set
#unixmap=nobody:nogroup all
## ARC ships with LCMAPS plugin that can be enabled with following unixmap configuration.
## For more information about configuring LCMAPS itself see section 'Using LCAS/LCMAPS' in the ARC
## Computing Element System Administrator Guide).
#unixmap=* mapplugin 30 /usr/libexec/arc/arc-lcmaps %D %P liblcmaps.so /usr/lib64 /etc/lcmaps/lcmaps.db arc

## unixgroupmap = authgroup rule - (previously unixgroup) Mapping rule only for users belonging to
##  specified authorization 'authgroup'. It is similar to an additional filter
##  for unixmap command which filters out all users not belonging to specified
##  authorization group. Only rules which generate unix user and group names
##  may be used in this command. Please read "ARC Computing Element System
##  Administrator Guide" for more information.
## multivalued
## default: not set
#unixgroupmap=users simplepool /etc/grid-security/pool/users
## CHANGE170: RENAMED

## unixlistmap = userlist_name rule - (previously unixvo) Mapping rule only for users belonging to
## specified userlist defined via the [userlist/name] block.
## Only rules which generate unix identity name may be used in this command.
## Please read "ARC Computing Element. System Administrator Guide" for more
## information. This command is similar to 'unixgroupmap' described above and
## exists for convenience for setups which base mapping on userlists.
## multivalued
## default: not set
#unixlistmap=ATLAS unixuser atlas:atlas
## CHANGE9: RENAMED. modified option: It uses the name from the [userlist/name] block
##
##
### end of the [common/mapping] block ##############################################


### The [userlist:name] (previously [vo]) blocks ################################
## The [userlist:name] blocks are used to define userlists and configure how those are
## generated by the nordugridmap utility, including the optional user mapping information.
## The userlist is identified with the generated file that is stored in the "outfile".
## Please note that behaviour of the nordugridmap external utility can be further modified by
## the optional [nordugridmap] block (see next block).
## Note that the [userlist:name] block by itself does not affect authorization. In order to define
## auth rules userlists can be referenced within the [authgroup] blocks by the userlist=name parameter.
## Also, the generated "outfile" can be used via the 'file' auth rule of the [authgroup] block.
## The order of this block in arc.conf may influence authorization decision. This block must appear before the
## [arex] blocks.
#[userlist:biousers]
## CHANGE17: new blockname that better reflects the purpose of the config block. This block is not defining any VO!

## id blockid - specifies the unique configuration block id (this does not affect nordugridmap utility)
## CHANGE18: DELETED  should be removed from code and config now that the userlist blocks have unique names

## vo vo_name - This optional parameter specifies the name of the userlist.
## This must be the same as the one in the [userlist/name] block name. 
## default: not set
#vo=biousers
## CHANGE19: DELETED. use the name from the block header instead!

## outfile = path - (previously file) The full path of the GENERATED file that contains the
## userlist (with optional mapping info).
## If the same file specified as output for different [userlist/name] blocks
## then nordugridmap will automatically merge entries following the order of the blocks.
## default: the value of the gridmap parameter from [common] or /etc/grid-security/grid-mapfile
#outfile=/etc/grid-security/lists/atlas-users
## CHANGE20: renamed from "file"

## *source = url - the URL of the VO database which is used to generate the userlist.
## The nordugridmap will use this URL to automatically generate and keep
## up-to-date userlist (mapfile) specified by the 'outfile' attribute.
##
## url is a multivalued attribute, several sources can be specified
## and all the users from those sources will be merged into the same file.
## The source URLs are processed in the given order.
##
## Currently supported URL types are:
##    http(s)://  - URL to plain text file. File should contain a list
##                 of DNs with optional issuer certificate authority DN
##                 (see require_issuerdn): "user DN" ["issuer DN"]
##    voms(s)://  - URL to VOMS-Admin interface
##    file://     - local file (stand-alone or dynamicaly generated by
##                 nordugridmap). File should contain a list of DNs with
##                 optional mapped unixid: "user DN" [mapped user ID]
##                 Result of optional mapped unixid processing depend
##                 on mapuser_processing option settings.
##    userlist:// - reference to another [userlist/name] configuration block
##    nordugrid   - add NorduGrid VO members
##
## You can use either userlist:// or file:// entries to specify dependencies
## between [userlist/name] blocks, but using userlist:// is a recommended way.
##
## For each separate source URL it is possible to override some parameters
## value. You can use the following syntax to perform this:
##    source=URL < parameter1=value1 parameter2=value2
## You can override the following parameters:
##    mapped_unixid       for http(s),voms(s),ldap and file URLs
##    cache_enable        for http(s),voms(s),ldap and file URLs
##    voms_method         for voms(s) URLs
##    mapuser_processing  for file URLs with mapped_unixid='<unixid>' overrided
##                        (control mapped_unixid overriding behaviour for URL)
## multivalued
## default: not set
#source=vomss://voms.ndgf.org:8443/voms/nordugrid.org
#source=vomss://lcg-voms.cern.ch:8443/voms/atlas?/atlas/Role=VO-Admin < mapped_unixid=atlasadmin
#source=vomss://kuiken.nikhef.nl:8443/voms/gin.ggf.org < voms_method=get
#source=http://www.nordugrid.org/developers.dn
#source=file:///etc/grid-security/priviliged_users.dn
#source=userlist://biousers
#source=nordugrid
## CHANGE21: MODIFIED options: edg-mkgridmap source option is removed (obsolete technology);  vo source option is renamed as userlist.

## mapped_unixid = unixid - The local UNIXID which is optionally used in the generated
## outfile by the nordugridmap utility.
##
## If any of the sources have already provided mapping information (file://
## or userlist://) behavior depends on 'mapuser_processing' from the [nordugridmap] block:
##    mapuser_processing = 'overwrite': ignore already provided mapping and
##                         apply mapped_unixid for all sources
##    mapuser_processing = 'keep': apply mapped_unixid only for sources that
##                         does not already has mapping information
##
## If the 'mapped_unixid' config parameter is not specified or has empty value,
## then behavior depends on the value of 'allow_empty_unixid' from the [nordugridmap] block:
##   If the allow_empty_unixid = 'yes': then empty value will be used for mapped_unixid
##                         which means that nordugridmap will generate only
##                         the list of DNs without mapping (consider using
##                         mapuser_processing='overwrite' along with this
##                         option or sources that does not provide previously
##                         defined mapping information)
##   If the allow_empty_unixid = 'no': then nordugridmap will skip users without mapping information
##						(if no mapping information provided by sources)
## default: ""
#mapped_unixid
#mapped_unixid=gridtest
## CHANGE22: Modified. The empty value should work the same way as missing parameter. set the default to ""

## voms_fqan_map = fqan unixid - The local UNIXID which is used to map voms(s)
## sources with specific FQAN given.
##
## Several voms_fqan_map can be specified for a [userlist/name] block.
## For each voms(s) sources in [userlist/name] block and every voms_fqan_map record
## separate source record will be automatically generated with mapped_unixid
## overwritten to specified one.
##
## Sources are generated in a given voms_fqan_map order. Original voms(s) source
## URL are processed LAST.
##
## This allows to simplify configuration, especially in redundancy cases when
## several VOMS servers are used for the same VO.
## multivalued
## default: not set
#voms_fqan_map=/atlas/Role=VO-Admin atlasadmin
#voms_fqan_map=/atlas/Role=production atlasprod

## require_issuerdn yes/no - YES would map only those DNs obtained from the urls...
## CHANGE23: DELETED. no valid use-case for this feature any longer.

## filter = ACL string - An ACL filter for the nordugridmap utility. Multiple
## allow/deny statements are possible. The fetched DNs are filtered against
## the specified rules before they are added to the generated outfile.
##
## * can be used as a wildcard. You may run the nordugridmap with the --test
## command line option to see how the filters you specified work.
##
## If at least one allow filter is specified implicit deny is used at the end
## of ACL. If only deny filters are present - implicit allow used at the end.
## multivalued
## default: not set
#filter=deny *infn*
#filter=allow *NorduGrid*
##
##
### end of the [userlist:name] block ######################################


### The [authgroup:name] (previously [group]) blocks ######################################
## These configuration blocks contain authorization rules. These rules determine which
## authorization group a user belongs to. Then, the access control of ARC services are
## implemented via specifying the [authgroup:name] to which certain permissions are granted.
## For more info please read "Security Framework of ARC" at
## http://www.nordugrid.org/documents/arc-security-documentation.pdf
## The authgroup should not be mistaken for a virtual organisation (VO).
## An authgroup may match a single VO if only a single check (rule) on VO membership is perfomed.
## It is however more common to allow multiple VOs in a single authgroup.
##
## IMPORTANT: Rules in an authgroup are processed in their order of appearance.
## The first matching rule decides the membership of the user to the authgroup
## being evaluated and the processing STOPS within that authgroup. This does not mean that
## the same user is not processed for the next authgroup: all [authgroup/name] blocks are
## evaluated, even if a user already has a match with one of the earlier groups.
##
## There are positively and negatively matching rules.
## If a rule is matched positively then the user tested is accepted
## into the respective group and further processing is stopped. Upon a
## negative match the user would be rejected for that group - processing
## stops too. The sign of rule is determined by prepending the rule with
## '+' (for positive) or '-' (for negative) signs. '+' is default and can
## be omitted. A rule may also be prepended with '!' to invert result of rule,
## which will let the rule match the complement of users. That complement
## operator ('!') may be combined with the operator for positive or negative
## matching.
##
## TODO: consider implementing Roger's suggestion and introduce a "rule" variable 
##
## All the objects used in the rules (e.g. userlists) MUST be defined before it may be used.
## In this respect the arc.conf is ORDER SENSITIVE. The order of this block in arc.conf may 
## influence authorization decision. This block must appear before the [arex] blocks.
#[authgroup:allowedusers]
## CHANGE31: renamed the block.

## name authgroup_name - This optional parameter specifies the name of the authgroup.
## This must be the same as the one in the [authgroup:name] block name.
## If this parameter not set then the name of the subblock is used instead, for example [authgroup:allowedusers]
## default: not set
#name=allowedusers
## CHANGE186: DELETED. use the name from the block header instead!

## subject = certificate_subject - Rule to match specific subject of user's
## X.509 certificate. No masks, patterns and regular expressions are allowed.
## multivalued
## default: not set
#subject=/O=Grid/O=Big VO/CN=Main Boss
#subject=/O=Grid/O=Big VO/CN=Deputy Boss

## file = path - Processes a list of DNs stored in an external file one per line and adds those to
## the authgroup.
## multivalued
## default: not set
#file=/etc/grid-security/local_users
#file=/etc/grid-security/atlas_users
## CHANGE32: Modified semantics. The external file should only contain DNs, no complex rules. No need to change the code.

## voms = vo group role capabilities - Match VOMS attribute in user's credential.
##  Use '*' to match any value.
## multivalued
## default: not set
#voms=nordugrid Guests * *
#voms=atlas students prodman *

## authgroup = group_name [group_name ...] - (previously group) Match user already belonging to one
## of specified authgroups. The authgroup referred here must be defined earlier in
## configuration file. Multiple authgroup names may be specified for this rule.
## That allows creating hierarchical structure of authorization groups like
## 'clients' are those which are 'users' and 'admins'.
## multivalued
## default: not set
#authgroup=local_admins
#authgroup=local_admins remote_users
## CHANGE33: renamed

## userlist = ulist_name [ulist_name ...] - (previously vo) Match user belonging to ulist_name defined
## in an earlier [userlist:ulist_name] block. Multiple userlist names are allowed for this rule.
## multivalued
## default: not set
#userlist=biousers
## CHANGE34: renamed

## plugin = timeout path [argument ...] - Run external executable or
##  function from shared library. Rule is matched if plugin returns 0.
##  In arguments following substitutions are supported:
##   %D - subject of certicate
##   %P - path to proxy
## ARC ships with LCAS plugin that can be enabled with following plugin configuration.
## For more information about configuring LCAS itself see section 'Using LCAS/LCMAPS' in the ARC
## Computing Element System Administrator Guide.
## multivalued
## default: not set
#plugin=10 /usr/libexec/arc/arc-lcas %D %P liblcas.so /usr/lib64 /etc/lcas/lcas.db

## lcas library directory database - Call LCAS functions to check rule.
## CHANGE35: DELETED. The same can be done with the "plugin" parameter

## remote URL ... - Check user's credentials against remote service. Only
## CHANGE36: DELETED.  Feature is not used for ages. Code simplification.

## all - Matches any user identity. This variable requires no arguments or values.
## default: not set
#all=
##
##
### end of the [authgroup:name] blocks ###############################


### The [lrms] block ##############################################
## This block specifies the characteristics of the Local Resource Manager System (batch system)
## sitting beneath the ARC CE. This is the block that contains all the lrms-specific parameters and information.
## Configuration values in this block are available for A-REX, the backends, accounting and infosys
## ARC subsystems. ARC support the most common LRMS flavours.
## For detailed description of recommended LRMS setups for ARC please refer to ARC CE sysadmin guide:
## http://www.nordugrid.org/documents/arc-ce-sysadm-guide.pdf
#[lrms]
## CHANGE10: This is a new block. Contains parameters previously set in [common], [infosys], [cluster], [queue]

## *lrms = lrmstype [defaultqueue] - Sets the type of the LRMS (queue system) and optionally the default queue name.
## ONLY ONE LRMS IS ALLOWED. MULTIPLE lrms ENTRIES WILL TRIGGER UNEXPECTED BEHAVIOUR.
##
## For lrmstype, the following values can be chosen:
##    fork    - simple forking of jobs to the same node as the server
##    sge     - (Sun/Oracle) Grid Engine
##    condor  - Condor
##    pbs     - PBS (covers all the PBS flavours e.g. OpenPBS, PBSPro, ScalablePBS, Torque)
##    lsf     - LSF
##    ll      - LoadLeveler
##    slurm   - SLURM
##    boinc   - Boinc
##    slurmpy - new generation SLURM scripts (provide access to slurm via ssh too)
## PBS has many flavours, ARC currenly supports OpenPBS, PBSPro, ScalablePBS
## and Torque (the official name for ScalablePBS). There is no need to specify
## the flavour or the version number of the PBS, simply write 'pbs'. Similarly,
## there is no need to specify (Sun/Oracle) Grid Engine versions and flavours.
##
## The optional "defaultqueue" parameter specifies the name of an existing LRMS queue
## in the cluster that will be used by AREX as the default queue to submit grid jobs in case 
## the job descriptions submitted to the ARC CE do not specify a requested queue.
## This queue name must match one of the [queue:queue_name] blocks.
##
## allowedvalues: fork sge condor pbs lsf ll slurm boinc slurmpy
## default: not set
#lrms=pbs gridlong
#lrms=slurm
## CHANGE11: new lrmstype values added (slurmpy).

## lrmsconfig = text - An optional free text field to describe the configuration of your
## Local Resource Management System (batch system). The value is published in the infosys,
## and is not used otherwise.
## default: not set
#lrmsconfig=single job per processor
## CHANGE12: moved here from the [cluster] block

## defaultmemory = number - The LRMS memory request of job to be set by the LRMS backend
## scripts, if a user submits a job without specifying how much memory should be used.
## The order of precedence is: job description -> defaultmemory -> nodememory -> 1GB.
## This is the amount of memory (specified in MB) that a job will request.
## default: not set
#defaultmemory=512
## CHANGE13: moved here from the [cluster] block

### PBS options: set these only in case of lrms=pbs
## pbs_bin_path = path - The path to the qstat,pbsnodes,qmgr etc PBS binaries,
## no need to set if PBS is not used
## default: not set
#pbs_bin_path=/usr/bin

## maui_bin_path = path - Sets the path of the maui commands like showbf.
## default: not set
#maui_bin_path=/usr/local/bin

## pbs_log_path = path - The path of the PBS server logfiles which are used by A-REX to determine
## whether a PBS job is completed. If not specified, A-REX will use qstat for that.
## default: not set
#pbs_log_path=/var/spool/pbs/server_logs

## pbs_dedicated_node_string = string - (previously dedicated_node_string) The string which
## is used in the PBS node config to distinguish the grid nodes from the rest.
## Suppose only a subset of nodes are available for grid jobs,
## and these nodes have a common "node property" string,
## this case the string should be set to this value and only the
## nodes with the corresponding  "pbs node property" are counted as grid enabled
## nodes. Setting the dedicated_node_string  to the value of the "pbs node
## property" of the grid-enabled  nodes will influence how the totalcpus, user
## freecpus is calculated. You don't need to set this attribute if your cluster
## is fully available for the grid and your cluster's PBS config does not use
## the "node property" method to assign certain nodes to grid queues. You
## shouldn't use this config option unless you make sure  your PBS config makes
## use of the above described setup.
## default: not set
#pbs_dedicated_node_string=gridnode
## CHANGE14: renamed. moved here from [cluster]

### Condor options: set these only in case of lrms=condor
## condor_bin_path = path - Path to Condor binaries. Must be set if Condor
## is used.
## default: not set
#condor_bin_path=/opt/condor/bin

## condor_config = path - Full path to Condor config file. Must be set if Condor
## is used and the config file is not in its default location
## (/etc/condor/condor_config or ~/condor/condor_config).
## The full path to the file should be given.
## default: not set
#condor_config=/opt/condor/etc/condor_config

## condor_rank = ClassAd_float_expression - If you are not happy with the way Condor picks nodes when
## running jobs, you can define your own ranking algorithm by optionally
## setting the condor_rank attribute. condor_rank should be set to a
## ClassAd float expression that you could use in the Rank attribute
## in a Condor job description.
## default: not set
#condor_rank=(1-LoadAvg/2)*(1-LoadAvg/2)*Memory/1000*KFlops/1000000

## condor_requirements = string - It needs to be defined for each Condor queue.
## Use this option to determine which nodes belong to the current queue.
## The value of 'condor_requirements' must be a valid constraints string
## which is recognized by a condor_status -constraint '....' command. It can
## reference pre-defined ClassAd attributes (like Memory, Opsys, Arch, HasJava,
## etc) but also custom ClassAd attributes.  To define a custom attribute on a
## condor node, just add two lines like the ones below in the `hostname`.local
## config file on the node:
##   NORDUGRID_RESOURCE=TRUE
##   STARTD_EXPRS = NORDUGRID_RESOURCE, $(STARTD_EXPRS)
## A job submitted to this queue is allowed to run on any node which satisfies
## the 'condor_requirements' constraint.  If 'condor_requirements' is not set,
## jobs will be allowed to run on any of the nodes in the pool. When configuring
## multiple queues, you can differentiate them based on memory size or disk
## space, for example.
## default: not set
#condor_requirements=(OpSys == "linux" && NORDUGRID_RESOURCE && Memory >= 1000 && Memory < 2000)

### SGE options: set these only in case of lrms=sge
## sge_bin_path = path - Path to Sun Grid Engine (SGE) binaries,
## MUST be set if SGE is the LRMS used
## default: not set
#sge_bin_path=/opt/n1ge6/bin/lx24-x86

## sge_root = path - Path to SGE installation directory. MUST be set if SGE is used.
## default: not set
#sge_root=/opt/n1ge6

## sge_cell = name - The name of the SGE cell to use. This option is only necessary
## in case SGE is set up with a cell name different from 'default'
## default: default
#sge_cell=default

## sge_qmaster_port = port - The SGE port options should be used in case SGE
## command line clients require SGE_QMASTER_PORT and SGE_EXECD_PORT environment
## variables to be set. Usually they are not necessary.
## default: default
#sge_qmaster_port=536

## sge_execd_port = port - The SGE port options should be used in case SGE
## command line clients requre SGE_QMASTER_PORT and SGE_EXECD_PORT environment
## variables to be set. Usually they are not necessary.
## default: default
#sge_execd_port=537

## sge_jobopts = string - Additional SGE options to be used when submitting jobs to SGE
## from this queue.
## default: not set
#sge_jobopts=-P atlas -r yes

### SLURM options: set these only in case of lrms=slurm
## slurm_bin_path = path - Path to SLURM binaries, must be set if installed
## outside of normal PATH
## default: not set
#slurm_bin_path=/usr/bin

## slurm_wakeupperiod = numsec - How long should infosys wait before querying SLURM for new data (seconds)
## default: 30
#slurm_wakeupperiod=15

## slurm_use_sacct = yes/no - Indicates whether ARC should use sacct instead of scontrol
## to obtain information about finished jobs
## Not supported by slurmpy.
## allowedvalues: yes no
## default: not set
#slurm_use_sacct=yes

### LSF options: set these only in case of lrms=lsf
## lsf_bin_path = path - The PATH to LSF bin folder
## default: not set
#lsf_bin_path=/usr/local/lsf/bin/

## lsf_profile_path = path - The PATH to profile.lsf file.
## default: not set
#lsf_profile_path=/usr/share/lsf/conf

## lsf_architecture = string - CPU architecture to request when submitting jobs to LSF.
## Use only if you know what you are doing.
## default: not set
#lsf_architecture=PowerPC
## CHANGE15: moved here from [queue/name] block

### LoadLeveler options: set these only in case of lrms=ll
## ll_bin_path = path - The PATH to the LoadLeveler bin folder
## default: not set
#ll_bin_path=/opt/ibmll/LoadL/full/bin

## ll_consumable_resources = yes/no - Indicates whether the LoadLeveler setup is
## using Consumable Resources.
## allowedvalues: yes no
## default: no
#ll_consumable_resources=yes

### Boinc options: set these only in case of lrms=boinc
## boinc_db_host = hostname - Connection strings for the boinc database: host
## default: not set
#boinc_db_host=localhost

## boinc_db_port = port - Connection strings for the boinc database: port
## default: not set
#boinc_db_port=3306

## boinc_db_name = db_name - Connection strings for the boinc database: db_name
## default: not set
#boinc_db_name=myproject

## boinc_db_user = user - Connection strings for the boinc database: db_user
## default: not set
#boinc_db_user=boinc

## boinc_db_pass = pwd - Connection strings for the boinc database: pwd
## default: not set
#boinc_db_pass=password

### Desktop Bridge options: set these only in case of lrms=dgbridge
## dgbridge_stage_dir = path - Desktop Bridge www publish dir.
## default: not set
#dgbridge_stage_dir=/var/www/DGBridge

## dgbridge_stage_prepend = url - Desktop Bridge url prefix pointing to dgbridge_stage_dir.
## default: not set
#dgbridge_stage_prepend=http://edgi-bridge.example.com/DGBridge/
##
##
### end of [lrms] block #####################################################


### The [lrms/ssh] block ##############################################
## This sub-block configures the ssh environment for remote batch management.
## Parameters within this block are relevant if the cluster frontend is remotely
## located wrt. CE frontend (machine running A-REX). If specified with the
## parameters below, the session, cache and runtime directories will be mounted
## from the cluster frontend on the CE frontend using sshfs. Job submission and
## management will done using ssh (Paramiko).
## Currently the python slurm (slurmpy) batch module are able to utilize remote ssh.
#[lrms/ssh]
## CHANGE16: new sub-block

## *remote_host = hostname - Define the remote cluster frontend machine which contains
## session, cache and runtime directories and where jobs should be submitted to.
## default: not set
## mandatory
#remote_host=myremotehost.org

## *private_key = path - Location of the private key which should be used establish
## connection to the machine specified by the 'remote_host' attribute.
## default: not set
## mandatory
#private_key=/etc/grid-security/hostkey-priv.pem

## *remote_user = user - User on remote cluster which should be used for mounting
## directories, submitting and managing jobs, and gathering information about
## cluster.
## default: not set
## mandatory
#remote_user=grid

## remote_sessiondir = path - Session directory on cluster frontend to be
## mounted (sshfs) on CE machine at directory specified by the 'sessiondir'
## attribute in the [arex] block.
## default: not set
## mandatory
#remote_sessiondir=/scratch/grid

## remote_runtimedir = path - Runtime environment directory on cluster frontend to
## be mounted (sshfs) on CE machine at directory specified by the 'runtimedir'
## attribute in the [arex] block.
## default: not set
#remote_runtimedir=/SOFTWARE/runtime

## *remote_cachedir = path - Cache directory on cluster frontend to be
## mounted (sshfs) on CE machine at directory specified by the 'cachedir'
## attribute in the [arex] block.
## default: not set
#remote_cachedir=/scratch/cache

## ssh_timeout = time - Timeout of establishing ssh connection. Unit in seconds.
## default: 10
#ssh_timeout=10
##
##
### end of [lrms/ssh] block #####################################################



### The [arex] block - previously [grid-manager] #####################
## The [arex] block, together with its various subblocks,
## configures the A-REX service hosted in *arched*. A-REX takes care of
## various middleware tasks on the frontend such as job creation and management,
## stagein/stageout, LRMS job submission, data caching, etc...
#[arex]
## CHANGE173: renamed block

## user = user[:group] - Switch to a non root user/group after startup.
## Use with caution because of possible limited functionality.
## default: do not switch
#user=grid:grid

## norootpower = yes|no - If set to yes, all job management processes
## will switch to mapped user's identity while accessing session directory.
## This is useful if session directory is on NFS with root squashing turned on.
## allowedvalues: yes no
## default: no
#norootpower=yes

## delegationdb = db_name - specify which DB to use to store delegations.
## Currently supported db_names are bdb and sqlite
## default: sqlite
#delegationdb=sqlite
## CHANGE171: modified. new default.

## watchdog = yes/no - Specifies if additional watchdog processes is spawned to restart
## main process if it is stuck or dies.
## allowedvalues: yes no
## default: no
#watchdog=no

## loglevel = level - (previously debug) Set loglevel of the arched daemon hosting A-REX service
## between 0 (FATAL) and 5 (DEBUG). Defaults to 3 (INFO).
## allowedvalues: 0 1 2 3 4 5
## default: 3
#loglevel=3
## CHANGE37: renamed

## logfile = path - Specify A-REX log file location. If using an external log
## rotation tool be careful to make sure it matches the path specified here.
## default: /var/log/arc/arex.log
#logfile=/var/log/arc/arex.log
## CHANGE189: modified default (renamed file)

## joblog = path - Specifies where to store specialized log about started
## and finished jobs. If path is empty or the parameter is not set - log is not written.
## This log is not used by any other part of ARC, so keep it disabled unless needed.
## default: not set
#joblog=/var/log/arc/gm-jobs.log

## logsize size [number] - 'Size' specifies in bytes how big log file is
## CHANGE38: DELETED. This functionality is not used.

## logreopen yes|no - Specifies if log file must be closed after each record is added.
## CHANGE39: DELETED. not really used. hide it from the arc.conf template. Can stay as a "hidden feature".

## fixdirectories = yes/missing/no - Specifies during startup A-REX should
## create all directories needed for it operation and set suitable default
## permissions. If "no" is specified then A-REX does nothing to prepare its
## operational environment. In case of "missing" A-REX only creates and
## sets permissions for directories which are not present yet.  For "yes"
## all directories are created and permisisons for all used directories are
## set to default safe values.
## allowedvalues: yes missing no
## default: yes
#fixdirectories=yes

## *controldir = path - The directory of the A-REX's internal job log files.
## The directory is not needed on the nodes. <must be set>.
## default: not set
#controldir=/var/spool/nordugrid/jobstatus

## *sessiondir = path [drain] - the directory which holds the sessiondirs of the grid jobs.
## Multiple session directories may be specified.
## In this case jobs are spread evenly over the session directories.
## If sessiondir=* is set, the session directory will be spread over the
## ${HOME}/.jobs directories of every locally mapped unix user. It is preferred
## to use common session directories. The path may be followed by "drain", in
## which case no new jobs will be assigned to that sessiondir, but current jobs
## will still be processed and accessible. <sessiondir must be set>
## multivalued
## default: not set
#sessiondir=/scratch/grid
#sessiondir=*

## defaultttl = [ttl [ttr]] - The ttl parameter sets the time in seconds for how long a job session
## directory will survive after job execution has finished. If not specified
## the default is 1 week. The ttr parameter sets how long information about a job will be kept
## after the session directory is deleted. If not specified, the ttr default is one month.
## default:  604800 2592000
#defaultttl=2592000

## shared_filesystem = yes/no - Specifies if computing nodes can access folders mounted
## with protocols like NFS with the same pathnames as the frontend.
## Note that the default 'yes' assumes that the paths to the session directories
## are the same on both frontend and nodes.
## If these paths are not the same, then one should set the scratchdir option.
## The option changes the RUNTIME_NODE_SEES_FRONTEND variable in the submission scripts.
## allowedvalues: yes no
## default: yes
#shared_filesystem=yes

## scratchdir = path - The path on computing node to move session directory to before
## execution. If defined should contain the path to the directory on the
## computing node which can be used to store a jobs' files during execution.
## Sets the environment variable RUNTIME_LOCAL_SCRATCH_DIR. If the variable is not set,
## then the session dir is not moved before execution. Don't set this parameter unless
## you want to move the sessiondir to scratchdir on the node.
## default: not set
#scratchdir=/local/scratch/

## shared_scratch = path - The path on frontend where scratchdir can be found. If
## defined should contain the path corresponding to that set in scratchdir as
## seen on the frontend machine. Sets the environment variable
## RUNTIME_FRONTEND_SEES_NODE.
## default: not set
#shared_scratch=/mnt/scratch

## tmpdir = path - A temporary directory used by A-REX.
## default: /tmp
#tmpdir=/tmp

## runtimedir = path - The directory which holds the runtimeenvironment scripts,
## should be available on the nodes as well! The runtimeenvironments are
## automatically detected and advertised in the information system.
## default: not set
## TODO: update the description to reflect the new RTE behaviour
#runtimedir=/SOFTWARE/runtime

## maxjobs = number1 number2 number3 number4 number5 - specifies maximum allowed number of jobs.
## number1 - jobs which are not in FINISHED state (jobs tracked in RAM)
## number2 - jobs being run (SUBMITTING, INLRMS states)
## number3 - jobs being processed per DN
## number4 - jobs in whole system
## number5 - LRMS scripts limit (jobs in SUBMITTING and CANCELING)
## A parameter set to -1 means no limit.
## default: not set
#maxjobs=10000 10 2000 -1 -1
## CHANGE40: Modified. Explicitly indicate "no limit" with -1. "Missing number" should not be allowed.

## maxrerun = number - Specifies how many times job can be rerun if it failed in LRMS.
## This is only an upper limit, the actual rerun value is set by the user in his xrsl.
## default: 5
#maxrerun=5

## statecallout = state options plugin_path - (previously authplugin) This parameter
## enables a callout feature of A-REX: every time job goes to 'state' A-REX
## will run 'plugin_path' executable. Options consist of key=value pairs separated
## by ','. Possible keys are:
##    timeout - wait for result no longer that 'value' seconds, (timeout= can be omitted).
##    onsuccess,onfailure,ontimeout - what to do if plugin exited with exit
## code 0, not 0, timeout achieved. Possible actions are:
## pass - continue executing job,
## fail - cancel job,
## log - write to log fail about problem and continue executing job.
## multivalued
## default: not set
## arc-blahp-logger: a statecallout plugin shipped with ARC: it's purpose is to write
## accounting log for every finished job in BLAH format.
#statecallout=FINISHED timeout=10,onfailure=pass /usr/libexec/arc/arc-blahp-logger -I %I -U %u -L %C/job.%I.local -P %C/job.%I.proxy
## arc-vomsac-check: another statecallout plugin shipped with ARC: it's purpose is to enforce
## per-queue access policies based on VOMS attributes present in user's
## proxy-certificate. Plugin should be run before job enters the cluster.
## It requires 2 arguments: path to job .local file and path to credentials file.
## Enforced per-queue access policies are configured with 'ac_policy' option
## in the [queue/name] configuration block.
#statecallout=ACCEPTED 60 /usr/libexec/arc/arc-vomsac-check -L %C/job.%I.local -P %C/job.%I.proxy
## CHANGE41: renamed from authplugin

## wakeupperiod = time - Specifies how often A-REX checks for new jobs
## arrived, job state change requests, etc. That is responsiveness of
## A-REX. 'time' is time period in seconds. Default is 3 minutes.
## Usually no need to change this parameter because important state changes
## are also triggering out-of-schedule checks.
## NOTE: This parameter does not affect responsiveness of backend scripts -
## especially scan-*-job. That means that upper estimation of time for
## detecting job finished executing is sum of responsiveness of backend
## script + wakeupperiod.
## default: 180
#wakeupperiod=180

## infoproviders_timelimit = seconds - (previously infoproviders_timeout) Sets the
## execution time limit of the infoprovider scripts started by the A-REX.
## Infoprovider scripts running longer than the specified timelimit are
## gracefully handled by the A-REX (the behaviour depends on
## the state of the system)
## Increase this value if you have many jobs in the controldir and
## infoproviders need more time to process.
## default: 10800
#infoproviders_timelimit=10800
## CHANGED42: rename, infoproviders_timelimit, move to [arex] block

## pidfile = path - Specify location of file containing PID of daemon process.
## default: /var/run/arched-arex.pid
#pidfile=/var/run/arched-arex.pid

## mail = email_address - Specifies the email address from where the notification mails are sent
## default: <username>@<hostname>
#mail=grid.support@somewhere.org
## CHANGE43: modified. implement a default! in the format of root@localhost. 

## gnu_time = path - The gnu time command
## default: /usr/bin/time
#gnu_time=/usr/bin/time

## nodename = path - The command to obtain hostname of computing node.
## default: /bin/hostname
#nodename=/bin/hostname

## helper = user executable arguments - By enabling this parameter A-REX will
## run an external "helper" program under the user useraccount. The program will be
## kept running, every time the executable finishes it will be started again.
## As a limitation, currently only '.' is supported as username, which corresponds
## to the user running A-REX.
## default: not set
#helper=. /usr/local/bin/myutility

## helperlog = path - Configuration option to specify the location of log for helpers.
## default: /var/log/arc/job.helper.errors
## default: ???
#helperlog=/var/log/arc/job.helper.errors
## CHANGE44: new parameter

## forcedefaultvoms = VOMS_FQAN - specify VOMS FQAN which user will be
## assigned if his/her credentials contain no VOMS attributes.
## To assign different values to different queues put this command
## into [queue] block.
## default: not set
#forcedefaultvoms=/vo/group/subgroup

## localcred timeout plugin_path - Every time an external executable
## CHANGE45: DELETED.  remove from code, config.

## globus_tcp_port_range - Firewall configuration.
## CHANGE46: MOVED from this block to [arex/data-staging]

## globus_udp_port_range - Firewall configuration.
## CHANGE47: MOVED from this block to [arex/data-staging]

## x509_user_cert - Location of credentials for service.
## CHANGE48: DELETED. no need to separately set these for A-REX. The common block is enough.

## x509_user_key - Location of credentials for service.
## CHANGE49: DELETED. no need to separately set these for A-REX. The common block is enough.

## x509_cert_dir - Location of trusted CA certificates
## CHANGE50: DELETED. no need to separately set these for A-REX. The common block is enough.
##
##
### end of the [arex] block ###################################


### The [arex/cache] block #########################################
## This subblock enables and configures the cache functionality of A-REX.
## A-REX can cache input files downloaded as part of stagein proces of grid jobs
## so that subsequent jobs requiring the same file don’t have to downloading it again.
## The cached file will be symlinked (or copied) into the session directory of the job.
## To disable to cache functionality simply comment out the [arex/cache] config block.
## For more information about the cache functionality of A-REX consult the sysadmin guide.
#[arex/cache]
## CHANGE51: new block

## logfile = path - (previously cachelogfile) sets the filename where output of the cache-clean
## tool should be logged. Defaults to /var/log/arc/cache-clean.log.
## default: /var/log/arc/cache-clean.log
#logfile=/tmp/cache-clean.log
## CHANGE52: renamed as logfile

## loglevel = level - (previously cacheloglevel) specifies the level of logging by the cache-clean
## tool, between 0 (FATAL) and 5 (DEBUG). Defaults to 3 (INFO).
## allowedvalues: 0 1 2 3 4 5
## default: 3
#loglevel=4
## CHANGE53: renamed as loglevel

## cachedir = cache_path [link_path] - Specifies a directory to store cached
## data. Multiple cache directories may be specified. Cached data will be distributed
## evenly over the caches.
## Optional link_path specifies the path at which the cache_path is accessible on
## computing nodes, if it is different from the path on the A-REX host.
## Example: cache=/shared/cache /frontend/jobcache
## If "link-path" is set to '.' files are not soft-linked, but copied to session
## directory. If a cache directory needs to be drained, then cachedir
## should specify "drain" as the link path, in which case no new files will be
## added to the cache.
## multivalued
## default: not set
#cachedir=/scratch/cache
#cachedir=/fs1/cache drain

## remotecachedir cache_path [link_path] - specifies caches which are under
## CHANGE54: DELETED, this feature is not in use any longer. remove parameter and clean code

## cachesize = max min - Specifies high and low watermarks for space used
## by cache, as a percentage of the space on the file system on which
## the cache directory is located. When the max is exceeded, files will
## be deleted to bring the used space down to the min level. It is a
## good idea to have the cache on its own separate file system. If cachesize
## is not specified the cache will not be cleaned by A-REX.
## default: do not clean
#cachesize=80 70

## cachelifetime = time - If cache cleaning is enabled by setting cachesize,
## files accessed less recently than the given time period will be deleted.
## Example values of this option are 1800, 90s, 24h, 30d. When no suffix is given the unit is seconds.
## default: not set
#cachelifetime=30d

## cacheshared = yes/no - specifies whether the caches share a filesystem with
## other data. If set to yes then cache-clean calculates the size of the cache
## instead of using filesystem used space.
## allowedvalues: yes no
## default: no
#cacheshared=yes

## cachespacetool = path [options] - specifies an alternative tool to "df" that
## cache-clean should use to obtain space information on the cache file system.
## The output of this command must be "total_bytes used_bytes". The cache
## directory is passed as the last argument to this command.
## default: not set
#cachespacetool=/etc/getspace.sh

## cachecleantimeout = time - the timeout in seconds for running the cache-clean
## tool. If using a large cache or slow file system this value can be
## increased to allow the cleaning to complete. Defaults to 3600 (1 hour).
## default: 3600
#cachecleantimeout=10000
##
##
### end of the [arex/cache] #############################################


### The [arex/data-staging] (previously [data-staging]) block ###########
## This subblock enables and configures the data staging capabilities of A-REX:
## A subsystem called DTR (Data Transfer Reloaded) is responsible for collecting input data
## for a job before submission to the LRMS, and for staging out data
## after the job has finished. Automagic data staging of A-REX is a very powerful feature,
## disabling this functionality (by commenting out the subblock) is not recommended.
#[arex/data-staging]
## CHANGE55: RENAMED block

## loglevel = number - (previously debug) Sets the log level for transfer logging in job.id.errors files,
## between 0 (FATAL) and 5 (DEBUG). Default is to use value set by loglevel option in
## [arex] section.
## allowedvalues: 0 1 2 3 4 5
## default: loglevel in [arex]
#loglevel=4
## CHANGE56: renamed as loglevel.

## statefile = path - (previously dtrlog) A file in which data staging state information
## (for monitoring and recovery purposes) is periodically dumped.
## default: controldir/dtr.state
#statefile=/tmp/dtr.state
## CHANGE57: renamed, modified: new default value

## usehostcert = yes/no - Whether the A-REX host certificate should be used for
## communication with remote hosts instead of the users' proxies.
## allowedvalues: yes no
## default: no
#usehostcert=yes

## maxtransfertries = number - the maximum number of times download and upload will
## be attempted per job (retries are only performed if an error is judged to be temporary)
## default: 10
#maxtransfertries=20

## securetransfer = yes|no - if data connection allows to choose use
## secure|non-secure data transfer. Currently only works for gridftp.
## allowedvalues: yes no
## default: no
#securetransfer=no

## passivetransfer = yes/no - If yes, gridftp transfers are passive. Setting
## this option to yes can solve transfer problems caused by firewalls.
## allowedvalues: yes no
## default: yes
#passivetransfer=yes
## CHANGE58: new default: yes

## globus_tcp_port_range = port_range - In a firewalled environment
## the software which uses GSI needs to know what ports are available.
## If not set a random port is selected.
## These variable are similar to the Globus enviroment variables:
## GLOBUS_TCP_PORT_RANGE and GLOBUS_UDP_PORT_RANGE.
## default: random port
#globus_tcp_port_range=9000,12000
## CHANGE59: moved here

## globus_udp_port_range = port_range - In a firewalled environment
## the software which uses GSI needs to know what ports are available.
## If not set a random port is selected.
## These variable are similar to the Globus enviroment variables:
## GLOBUS_TCP_PORT_RANGE and GLOBUS_UDP_PORT_RANGE.
## default: random port
#globus_udp_port_range=9000,12000
## CHANGE 60: moved here

## httpgetpartial = yes/no - If yes, HTTP GET transfers may transfer data in
## chunks/parts. If no - data is always transfered in one piece.
## allowedvalues: yes no
## default: no
#httpgetpartial=no
## CHANGE61: new default: no

## speedcontrol = min_speed min_time min_average_speed max_inactivity - specifies
## how slow data transfer must be to trigger error. Transfer is cancelled if
## speed is below min_speed bytes per second for at least min_time seconds,
## or if average rate is below min_average_speed bytes per second, or no data
## was transferred for longer than max_inactivity seconds.
## Value of zero turns feature off.
## default: 0 300 0 300
#speedcontrol=0 300 0 300
## CHANGE62: modified: missing parameter (speedcontrol="") should also turn the feature off, not just zero value.

## maxdelivery = number - Maximum number of concurrent file transfers, i.e. active
## transfers using network bandwidth. This is the total number for the whole
## system including any remote staging hosts.
## default: 10
#maxdelivery=40

## maxprocessor = number - Maximum number of concurrent files in each pre- and post-
## processing state, eg cache check or replica resolution.
## default: 10
#maxprocessor=20

## maxemergency = number - Maximum "emergency" slots which can be assigned to transfer
## shares when all slots up to the limits configured by the above two options
## are used by other shares. This ensures shares cannot be blocked by others.
## default: 1
#maxemergency=5

## maxprepared = number - Maximum number of files in a prepared state, i.e. pinned on a
## remote storage such as SRM for transfer. A good value is a small multiple of
## maxdelivery.
## default: 200
#maxprepared=250

## sharepolicy = grouping - (previously sharetype) Defines the mechanism to be used for the grouping of the job transfers. DTR assigns
## the transfers to shares, so that those shares can be assigned to different priorities.
## Possible values for "grouping" are dn, voms:vo, voms:role and voms:group:
##   dn - each job is assigned to a share based on the DN of the user sumbitting the job.
##   voms:vo - each job is assigned to a share based on the VO specified in the proxy.
##   voms:role - each job is assigned to a share based on the role specified in the first
## attribute found in the proxy.
##   voms:group - each job is assigned to a share based on the group specified in the
## first attribute found in the proxy.
## In case of the voms schemes, if the proxy is not a VOMS proxy, then a default share is used.
## default: not set
#sharepolicy=voms:role
## CHANGE63: renamed

## sharepriority = share priority - (previously definedshare) Defines a share with a fixed priority, different from the
## default (50). Priority is an integer between 1 (lowest) and 100 (highest).
## multivalued
## default: not set
#sharepriority=myvo:students 20
#sharepriority=myvo:production 80
## CHANGE64: renamed

## copyurl = url_head local_path - Configures that DTR should use copy instead of download
## in case of certain stagein files. URLs, starting from 'url_head'
## should be accessed in a different way (most probaly unix open). The
## 'url_head' part of the URL will be replaced with 'local_path' and
## file from obtained path will be copied to the session directory.
## NOTE: 'local_path' can also be of URL type.
## multivalued
## default: not set
#copyurl=gsiftp://example.org:2811/data/ /data/
#copyurl=gsiftp://example2.org:2811/data/ /data/

## linkurl = url_head local_path [node_path] - Identical to 'copyurl', configures DTR
## so that for certain URLs files won't be downloaded or copied (in case of copyurl),
## but soft-link will be created. The 'local_path'
## specifies the way to access the file from the frontend, and is used
## to check permissions. The 'node_path' specifies how the file can be
## accessed from computing nodes, and will be used for soft-link creation.
## If 'node_path' is missing - 'local_path' will be used.
## multivalued
## default: not set
#linkurl=gsiftp://somewhere.org/data /data
#linkurl=gsiftp://example.org:2811/data/  /scratch/data/

## use_remote_acix = URL - (previously acix_endpoint) If configured then the
## ARC Cache Index, available at the URL, will be queried for every input file
## specified in a job description and any replicas found in sites with accessible caches
## will be added to the replica list of the input file.
## The replicas will be tried in the order specified by preferredpattern variable.
## default: not set
#use_remote_acix=https://cacheindex.ndgf.org:6443/data/index
## CHANGE65: rename

## preferredpattern = pattern - specifies a preferred pattern on which
## to sort multiple replicas of an input file. It consists of one or
## more patterns separated by a pipe character (|) listed in order of
## preference. Replicas will be ordered by the earliest match. If the
## dollar character ($) is used at the end of a pattern, the pattern
## will be matched to the end of the hostname of the replica. If an
## exclamation mark (!) is used at the beginning of a pattern, any replicas
## matching the pattern will be excluded from the sorted replicas.
## default: not set
#preferredpattern=srm://myhost.ac.uk|.uk$|ndgf.org$|badhost.org$

## central_logfile = path  - A file in which all data staging messages from every job
## will be logged (in addition to their job.id.errors files). If this option is
## not present or the path is empty the log file is not created. Note this file
## is not automatically controlled by logrotate.
## default: not set
#central_logfile=/var/log/arc/datastaging.log

## The following 4 options are used to configure multi-host data staging.
##
## deliveryservice = URL - The URL to a data delivery service which can perform remote
## data staging
## default: not set
#deliveryservice=https://myhost.org:443/datadeliveryservice

## localdelivery = yes/no - If any deliveryservice is defined, this option determines
## whether local data transfer is also performed.
## allowedvalues: yes no
## default: no
#localdelivery=yes

## remotesizelimit = size - Lower limit on file size (in bytes) of files that remote
## hosts should transfer. Can be used to increase performance by transferring
## small files using local processes.
## default: no limit
#remotesizelimit=100000
##
##
### end of the [arex/datastaging] block ############################


### The [arex/ws] block #################################
## A-REX exposes a set of Web Service interfaces that can be used to create and
## manage jobs, obtain information about the CE and the jobs, handle delegations,
## access cache information, so on. Comment out this block if you don't want to
## provide WS-interfaces for various A-REX functionalities.
#[arex/ws]
## CHANGE66: new block. most of the parameters originates from the old [grid-manager] block

## wsurl = url - (previously arex_mount_point) Specifies the base URL under which
## the web service intrefaces will be available. The URL argument must be a
## full URL consisting of protocol+host+port+path: e.g. https://<hostname>:<port>/<path>
## Make sure the chosen port is not blocked by firewall or other security rules.
## default: https://hostname:443/arex,  where hostname is taken from the [common] block
#wsurl=https://piff.hep.lu.se:443/arex
## CHANGE67: renamed. modified: set default as https://hostname:443/arex

## enable_arc_interface yes|no - turns on or off the ARC own WS interface
## CHANGE68: DELETED. All non-EMIES interfaces (bes and co.)  should be removed from the code since EMI-ES will be the only WS interface we support.

## enable_emies_interface - enable the EMI Execution Service interface.
## CHANGE69: DELETED. The interfaces are enabled/disabled by the block, no need for such parameter.

## logfile = path - (previously wslogfile) Specify log file location for WS-interface operations.
## default: /var/log/arc/ws-interface.log
#logfile=/var/log/arc/ws-interface.log
## CHANGE70: renamed.

## max_job_control_requests = number - The max number of simultaneously processed job management
## requests over WS interface - like job submission, cancel, status check etc.
## default: 100
#max_job_control_requests=100

## max_infosys_requests = number - The max number of simultaneously processed info
## requests over WS interface.
## default: 1
#max_infosys_requests=1

## max_data_transfer_requests = number - The max number of simultaneously processed data transfer
## requests over WS interface - like data staging.
## default: 100
#max_data_transfer_requests=100
##
##
### end of the [arex/ws] block ##############################


### The [arex/ws/emies] block ################################
## EMIES is "The" Web Service interface offered by A-REX to create and manage computational jobs,
## obtain resource and activity information, also handle delegation. EMIES is a complete set of
## Computing Element interface, it encapsulates all the functionality a CE should expose via its interface.
## See interface description at
## http://www.nordugrid.org/documents/EMI-ES-Specification_v1.16.odt
## If you don't want to offer EMIES interface, remove or comment out this block in our arc.conf.
#[arex/ws/emies]
## CHANGE71: new subblock

## allowunknown = yes/no - Specifies whether to check user subject against grid-mapfile and
## reject missing users. By default unknown (not in the grid-mapfile) grid users
## are rejected by the server.
## allowedvalues: yes no
## default: no
#allowunknown=no

## allownew = yes/no - The 'allownew' config parameter sets if the Computing Element accepts
## submission of new jobs via the WS-interface. This parameter can be used to close down the CE.
## allowedvalues: yes no
## default: yes
#allownew=yes
## CHANGE72: new parameter in this block. Implement support in the code for WS-interface.

## allownew_override = [authgroup ...]  - (previously allowsubmit) Defines which authorization
## groups are allowed to submit new jobs via the WS-interfaces
## when the CE is closed with allownew=no. Note that it requires the allownew=no to be set.
## multivalued
## default: not set
#allownew_override=biousers atlasusers
#allownew_override=yourauthgroup
## CHANGE73: rename. modify behaviour: possible to specify several groups on a single line!

## allowaccess = authgroup [authgroup ...] - (previously groupcfg) Specifies authorization
## groups that are allowed to access the WS EMIES - based jobsubmission interface.
## If this parameter is not set, then no additional restrictions are applied for authorizing
## user access.
## The matching group is also used for evaluating VOMS attributes representing the user.
## default: not set
#allowaccess=biousers atlasusers
## CHANGE74: new parameter in the EMIES block

## maxjobdesc = size - specifies maximal allowed size of job description
## in bytes. Default value is 5MB. Use 0 to set unlimited size.
## default: 5242880
#maxjobdesc=0
## CHANGE75: new parameter in this block. Implement support in the code for WS-interface.
##
##
### end of the [arex/ws/emies] block ##############################


### The [arex/ws/cache] block ################################
## The content of the A-REX cache can be accessed via a WS-interface.
## Configuring this block will allow reading cache files through a special URL:
## For example, if the remote file gsiftp://remotehost/file1 is stored in the cache
## and the WS interfaces (configured above) are available via wsurl of https://hostname:443/arex/,
## then the cached copy of the file can be access via the following special URL:
## https://hostname:344/arex/cache/gsiftp://remotehost/file1
## Comment out this block if you don't want to expose the cache content via WS-interface.
#[arex/ws/cache]
## CHANGE76: new block

## cacheaccess = rule - This parameter defines the access control rules for the cache wsinterface,
## the rules for allowing access to files in the cache remotely through the A-REX web interface.
## If not set, then noone can access anything. The default is not set that means complete denial.
## A rule has three parts:
## 1. Regular expression defining a URL pattern
## 2. Credential attribute to match against a client's credential
## 3. Regular expression defining a credential value to match against a client's
##    credential
## A client is allowed to access the cached file if a URL pattern matches the
## cached file URL and the client's credential has the attribute and matches the
## value required for that pattern. Possible values for credential attribute are
## dn, voms:vo, voms:role and voms:group. Remote cache access requires that the
## A-REX web interface is enabled via arex_mount_point.
## multivalued
## default: not set
#cacheaccess=gsiftp://host.org/private/data/.* voms:vo myvo:production
#cacheaccess=gsiftp://host.org/private/data/bob/.* dn /O=Grid/O=NorduGrid/.*
##
##
### end of the [arex/ws/cache] block ####################


### The [arex/ws/candypond] block (previously cacheservice) #############
## The CandyPond (Cache and deliver your pilot on-demand data) A-REX Web
## Service (previously called Cache Service) exposes various useful operations
## for the pilot job model where input data for jobs is not known until the job
## is running on the worker node.
## The CandyPond service is available via the wsurl/candypond URL
## (e.g. https://hostname:443/arex/candypond)
## Note that CandyPond uses the same DTR data staging framework that is used by
## A-REX and configured via the [arex/data-staging] block.
## Comment out this block if you don't need the CandyPond functionality and
## don't want to expose this interface.
#[arex/ws/candypond]
## CHANGE77: NEW block, renamed service

## enable_cache_service yes|no - Turn on or off the cache service interface.
## CHANGE78: DELETED. Service interface, functionality is enabled/disabled by subblocks.
##
##
### end of the [arex/ws/candypond] block ####################


### The [arex/ws/argus] block ############################
## The Web Service components of A-REX may directly use the Argus service
## (https://twiki.cern.ch/twiki/bin/view/EGEE/AuthorizationFramework)
## for requesting authorization decisions and performing client mapping
## to a local user account.
## This block turns on and configures the A-REX WS - Argus integration:
## When this block is enabled, A-REX will communicate to Argus PEP or PDP service
## for every WS interface operation!
## Comment out this block if you don't intend to use any external Argus service with ARC.
#[arex/ws/argus]
## CHANGE79: new block for the Argus functionality. Change code so that Argus is turned on/off based on this block

## arguspep_endpoint = url - Specifies URL of Argus PEPD service to use for
## authorization and user mapping.
## It is worth to mention that "requireClientCertAuthentication" (default is false)
## item of pepd.ini (configuration of Argus PEPD service) is set to be 'true', then
## https should be used, otherwise http is proper.
## Note that Argus will be contacted for every WS interface operation requested!
## default: not set
#arguspep_endpoint=https://somehost.somedomain:8154/authz

## arguspep_profile = profile_name - Defines which communication profile to use while
## communicating with Argus PEPD service. Possible values for profile_name are:
##  direct - pass all authorization attributes (only for debugging)
##  subject - pass only subject name of client
##  emi - ARC native profile developed in EMI project. This is default option.
## allowedvalues: direct subject emi
## default: emi
#arguspep_profile=emi
## CHANGE80: modified parameter values: remove cream (or at least hide from the arc.conf.reference)

## arguspep_usermap = yes/no - Specifies whether response from Argus service may define mapping
## of client to local account. Default is 'no'.
## Note that Argus is contacted after all the other user mapping is performed. Hence it can
## overwrite all other decisions.
## allowedvalues: yes no
## default: no
#arguspep_usermap=no

## arguspdp_endpoint = url - Specifies URL of Argus PDP service to use for
## authorization and user mapping.
## It is worth to mention that "requireClientCertAuthentication" (default is false)
## item of pdp.ini (configuration of Argus PDP service) is set to be 'true', then
## https should be used, otherwise http is proper.
## Note that Argus will be contacted for every WS interface operation requested!
## default: no
#arguspdp_endpoint=https://somehost.somedomain:8152/authz

## arguspdp_profile = profile_name - Defines which communication profile to use while communicating
## with Argus PDP service. Possible values for profile_name are:
##  subject - pass only subject name of client
##  emi - ARC native profile developed in EMI project. This is default option.
## allowedvalues: subject emi
## default: emi
#arguspdp_profile=emi
## CHANGE81: modified parameter values: remove cream (or at least hide from the arc.conf.reference)

## arguspdp_accpetnotapplicable = yes/no - Specify if the "NotApplicable" decision returned by Argus
## PDP service is treated as reason to deny request. Default is 'no', which treats
## "NotApplicable" as reason to deny request.
## allowedvalues: yes no
## default: no
#arguspdp_acceptnotapplicable=no
##
##
#### end of the [arex/ws/argus] block #####################


### The [arex/jura] block ###################################
## JURA is the accounting  record generating and reporting module of A-REX.
## A-REX periodically executes JURA to processes the job log files,
## and based on the accounting target destinations specified in them,
## JURA creates usage records in the appropriate format and sends
## the generated records to one or more accounting service destinations.
## Optionally, the generated accounting records can be archived on the CE.
## Enable and configure this block if you want to send accounting records to
## accounting services.
## Note that a dedicated "accounting target" subblock is needed for every accounting
## destination. The target subblocks are either of a type apel or sgas:
## [arex/jura/apel:targetname] or [arex/jura/sgas:targetname]
#[arex/jura]
## CHANGE85: new dedicated block for JURA
## CHANGE86: A-REX should NOT provide the possibility of client-side target selection (in xrsl) any longer!

## logfile = path - (previously jobreport_logfile) The name of the jura logfile.
## default: /var/log/arc/jura.log
#logfile=/var/log/arc/jura.log
## CHANGE87: renamed.

## loglevel = number - Log level for the JURA accounting module.
## allowedvalues: 0 1 2 3 4 5
## default: 3
#loglevel=3
## CHANGE88: new parameter!  implement it in the code

## urbatchsize = number - JURA sends usage records not one-by-one, but in batches.
## This options sets the size of a batch. Zero value means unlimited batch size.
## This option can also be set in the sgas/apel target blocks to overwrite common value.
## default: 50
#urbatchsize=80
## CHANGE91: new parameter. new default.

## vomsless_vo = voname voissuer - This parameter allows the sysadmin to manually assign
## VOs to jobs that were submitted with "VOMS-less grid proxies" . voname is the VO name
## to be used in the generated records while voissuer is the issuer identity of the VO.
## default: not set
#vomsless_vo=ATLAS
#vomsless_vo=fgi.csc.fi vomss://voms.fgi.csc.fi:8443/voms/fgi.csc.fi
## CHANGE92: new parameter.

## vo_group = group - Sets additional VO group attribute for the usage records.
## default: not set
#vo_group=bio
## CHANGE93: new parameter

## urdelivery_keepfailed = days - Specifies for how many days JURA will try to send a record
## to the destination accounting service before it gives up. Records not successfully sent
## by after the number of days expired will be deleted from the controldir/logs directory.
## The deleted records are nevertheless archived if archiving was turned on.
## This parameter can be overwritten with a target specific value.
## default: 30
#urdelivery_keepfailed=30
## CHANGE94: new parameter.

## urdelivery_frequency = seconds - (previously jobreport_period) Specifies the frequency of
## message publishing: how often the JURA process is started by A-REX.
## default: 3600
#urdelivery_frequency=3600
## CHANGE95: renamed

## jobreport publisher - name of the accounting records publisher.
## CHANGE96: DELETED. hardcode JURA as THE publisher in A-REX.

### conf parameters to specify alternative credentials for JURA.
## x509_host_key = path - Optional parameter to overwrite [common] block values.
#x509_host_key=/etc/grid-security/hostkey.pem
## CHANGE97: new parameter in this block

## x509_host_cert = path - Optional parameter to overwrite [common] block values.
#x509_host_cert=/etc/grid-security/hostcert.pem
## CHANGE98: new parameter in this block

## x509_cert_dir = path - Optional parameter to overwrite [common] block values.
#x509_cert_dir=/etc/grid-security/certificates
## CHANGE99: new parameter in this block

## jobreport credentials path [key_file [cert_file [ca_dir]]]
## CHANGE100: DELETED. make sure jura can use the standard credentials from common block or the optional x509 parameters above

## jobreport options [name:value, ...]- specifies additional parameters for the jobreporter.
## CHANGE101: DELETED. a new block structure was created to configure those jura options.

## jobreport=URL ... number  specifies that A-REX has to report information about jobs being
## CHANGE102: DELETED. new blocks are introduced as a replacement.
##
##
### end of the [arex/jura] block ########################################


## The [arex/jura/archiving] block ##############################
## This block enables the archiving functionality of JURA.
## If archiving is enabled then the generated usage records are stored
## in a the specified archivedir directory on the disk with the following
## file naming convention used: "usagerecord[Type].<jobid>.<random>".
## Here Type is one of the supported record formats such as OGFUR or CAR.
## By default the archiving is turned off.
#[arex/jura/archiving]
## CHANGE89: NEW block

## archivettl = days - The archive time to live (ttl) parameter
## sets the number of days to keep the archive records in the archivedir.
## If not specified the records are kept forever.
## default: not set
#archivettl=365
## CHANGE90: new parameter. new feature to implement!

## archivedir = path - Sets the directory path for the archived usage records.
## If archiving is turned on, then the generated usage records are stored
## in this directory with the following file naming convention used: 
## "usagerecord[Type].<jobid>.<random>".
## Here Type is one of the supported record formats such as OGFUR or CAR.
## default:  /var/log/arc/jura/archive
#archivedir=/var/log/arc/jura/archive
## CHANGE172: NEW
##
##
### end of the [arex/jura/archiving] block ########################


### The [arex/jura/sgas:targetname] blocks ##############################
## An SGAS sub-block of [arex/jura] enables and configures an SGAS accounting
## server as a target destination to which JURA will send properly formatted usage records.
## The [arex/jura] config values are applicable for every target sub-block but
## also can be overwritten.
## You need to define a separate block with a unique targetname for every SGAS target server.
#[arex/jura/sgas:neic_sgas]
## CHANGE103: new dedicated sub-blocks for SGAS JURA targets

## *targeturl = url - The service endpoint URL of SGAS server.
## default: not set
#targeturl=https://grid.uio.no:8001/logger
## CHANGE104: new parameter

## localid_prefix = prefix_string - Sets a prefix value for the LocalJobID ur parameter
## for the SGAS usage records.
## default: not set
#localid_prefix=some_text_for_SGAS
## CHANGE105: new parameter

## vofilter = vo - Configures a job record filtering mechanism based on the
## VO attribute of the jobs. Only the matching job records, which was one
## of VO that you set here, will be sent to the target accounting service.
## multivalued
## default: not set
#vofilter=atlas
#vofilter=fgi.csc.fi
## CHANGE106: new parameter

## urbatchsize = number - JURA sends usage records not one-by-one, but in batches.
## This options sets the size of a batch. Zero value means unlimited batch size.
## This option can also be set in the sgas/apel target blocks to overwrite common value.
## default: 50
#urbatchsize=80
## CHANGE107: new parameter.
##
##
### end of the [arex/jura/sgas:targetname] blocks ########################


### The [arex/jura/apel:targetname] blocks ###############################
## An APEL sub-block of [arex/jura] enables and configures an APEL accounting
## server as a target destination to which JURA will send properly formatted usage records.
## The [arex/jura] config values are applicable for every target sub-block but
## also can be overwritten.
## You need to define a separate block with a unique targetname for every APEL target server.
#[arex/jura/apel:egi_prod_apel]
## CHANGE108: new dedicated sub-blocks for APEL JURA targets
        
## *targeturl = url - The service endpoint URL of the APEL accounting server.
## default: not set
#targeturl=https://mq.cro-ngi.hr:6162
## CHANGE109: new parameter

## *topic = topic_name - Sets the name of the APEL topic to which JURA will publish the
## accounting records.
## default: not set
#topic=/topic/global.accounting.cpu.central
## CHANGE110: new parameter.

## gocdb_name = name - Can be used to specify the GOCDB name of the resource.
## This value would be seen as Site attribute in the generated APEL record.
## default: not set
#gocdb_name=GRID_UIO_NO
## CHANGE111: new parameter.

## benchmark_type = type - Type of benchmark (Si2k, Sf2k, HEPSPEC) to be reported in every UR.
## default: not set
#benchmark_type=HEPSPEC
## CHANGE112: new parameter

## benchmark_value = number - The value of the of benchmark to be reported in every UR.
## default: not set
#benchmark_value=2.4
## CHANGE113: new parameter

## benchmark_description = string - Additional description for the benchmark
## to be reported in every UR.
## default: not set
#benchmark_description=some description for benchmark
## CHANGE114: new parameter

## use_ssl = yes/no - Turns on/off ssl for the SSM communication with APEL server.
## allowedvalues: yes no
## default: no
#use_ssl=yes
## CHANGE115: new parameter

## vofilter = vo - Configures a job record filtering mechanism based on the
## VO attribute of the jobs. Only the matching job records, which was one
## of VO that you set here, will be sent to the target accounting service.
## multivalued
## default: not set
#vofilter=atlas
#vofilter=fgi.csc.fi
## CHANGE116: new parameter

## urbatchsize = number - JURA sends usage records not one-by-one, but in batches.
## This options sets the size of a batch. Zero value means unlimited batch size.
## This option can also be set in the sgas/apel target blocks to overwrite common value.
## default: 1000
#urbatchsize=1000
## CHANGE117: new parameter. new default.
##
##
### end of the [arex/jura/apel:targetname] blocks ############################


### The [arex/ganglia] block  - previously [gangliarc] ###############################
##
## This block enables the monitoring of ARC-specific metrics through and existing ganglia
## installation. Earlier versions (ARC < 6.0) relied only on the standalone tool gangliarc.
## Ganglia is now integrated into ARC to extract jobmetrics. Ganglia for system metrics is
## for the moment still run as separate gangliarc instance.
## 
##
#[arex/ganglia]
## CHANGE185: RENAMED block, merged of all ganglia inside this single block

## gmetric_bin_path = path - (previously gmetric_exec) The path to gmetric executable.
## default: /usr/bin/gmetric
#gmetric_bin_path=/usr/local/bin/gmetric
## CHANGE190: Moved from deleted [gangliarc] block and renamed. Path used in arc-ganglia implementation JobsMetrics.cpp
## assumes path of type /usr/bin, not /usr/bin/gmetric, so must be changed in cpp file.

## logfile = path - log file of the daemon.
## default: /var/log/arc/gangliarc.log
#logfile=/tmp/gangliarc.log

## pidfile = pid - pid file of the daemon.
## default: /var/run/gangliarc.pid
#pidfile=/tmp/gangliarc.pid

## python_bin_path = path - The path to python executable. 
## default: /usr/bin/python
#python_bin_path=/usr/local/bin/python

## ganglialocation path - path to ganglia gmetric executable
## default: /usr/bin
#ganglialocation=/usr/local/bin
## CHANGE188: DELETED. documented first in 5.3.0. Use gmetric_bin instead.

## metrics = name_of_the_metrics - the metrics to be monitored. 
## metrics takes a comma-separated list of one or more of the following metrics:
## - staging -- number of tasks in different data staging states
## - cache -- free cache space
## - session -- free session directory space
## - heartbeat -- last modification time of A-REX heartbeat
## - processingjobs -- the number of jobs currently being processed by ARC (jobs
##                     between PREPARING and FINISHING states)
## - failedjobs -- the number of failed jobs per last 100 finished
## - jobstates -- number of jobs in different A-REX internal stages
## - all -- all of the above metrics
## default: all
## allowedvalues: staging cache session heartbeat processingjobs failedjobs jobstates all
#metrics=all
##

## frequency = seconds - The period between each information gathering cycle, in seconds.
## default: 20
#frequency=30
##
##
### end of the [arex/ganglia] block ##############


### The [gridftpd] block #######################################################
## This block enables and configures the gridftp server. The usage of the gridftp is
## twofold in connection with ARC: 1) The server together with its custom jobplugin
## can be used as a job submission and management interface for an ARC CE.
## 2) The server with the fileplugin can be used as a very simplistic storage element.
## This block configures the common server capabilities. To make the gridftp service functional,
## you need to enable at least one of the plugin subblocks as well.
#[gridftpd]

## allowunknown = yes/no - Specifies whether to check user subject against grid-mapfile and
## reject missing users. By default unknown (not in the grid-mapfile) grid users
## are rejected by the gridftp server (for both plugins).
## allowedvalues: yes no
## default: no
#allowunknown=no

## user = user[:group] - Switch to a non root user/group after startup
## WARNING: Make sure that the certificate files are owned by the user/group
## specified by this option.
## default: root:root
#user=grid

## loglevel = level - (previously debug) Set log level of the gridftpd daemon, between
## 0 (FATAL) and 5 (DEBUG). Default is 3 (INFO).
## allowedvalues: 0 1 2 3 4 5
## default: 3
#loglevel=2
## CHANGE118: renamed

## daemon yes|no - Whether the  is run in daemon mode.  Default is yes.
## CHANGE119: DELETED. remove this config parameter from arc.conf. the functionality will remain via cli option

## logfile = path - Set logfile location of the gridftp server.
## default: /var/log/arc/gridftpd.log
#logfile=/var/log/arc/gridftpd.log

## logsize size [number] - 'Size' specifies in bytes how big log file is
## CHANGE120: DELETED. remove for simplification purposes.

## pidfile = path - Specify location of file containing PID of daemon process.
## default: /var/run/gridftp.pid
#pidfile=/var/run/gridftpd.pid

## port = bindport - Port to listen on.
## default: 2811
#port=2811

## encryption = yes/no - should data encryption be allowed.
## Encryption is very heavy, therefore the default is no.
## allowedvalues: yes no
## default: no
#encryption=no

## include - Include contents of another config file.
## CHANGE121: DELETED. no need for this feature any longer

## allowactivedata = yes/no - if no, only passive data transfer is allowed.
## By default both passive and active data transfers are allowed.
#allowactivedata=yes

## maxconnections = number - The maximum number of connections accepted by a gridftpd server.
## default: 100
#maxconnections=200

## defaultbuffer = size - Defines size of every buffer for data
## reading/writing. The actual value may decrease if the
## cumulative size of all buffers exceeds value specified by maxbuffer.
## default: 65536
#defaultbuffer=65536

## maxbuffer = size - Defines maximal amount of memory in bytes to be
## allocated for all data reading/writing buffers. Default is 640kB.
## The number of buffers is (max {3, min {41, 2P + 1}}), where P is the
## parallelism level requested by the client.  Hence, even without parallel
## streams enabled number of buffers will be 3.
## default: 655360
#maxbuffer=655360

### Firewall specifics
## globus_tcp_port_range = port_range - In a firewalled environment
## the software which uses GSI needs to know what ports are available.
## If not set a random port is selected.
## These variable are similar to the Globus enviroment variables:
## GLOBUS_TCP_PORT_RANGE and GLOBUS_UDP_PORT_RANGE.
## default: random port
#globus_tcp_port_range=9000,12000

## globus_udp_port_range = port_range - In a firewalled environment
## the software which uses GSI needs to know what ports are available.
## If not set a random port is selected.
## These variable are similar to the Globus enviroment variables:
## GLOBUS_TCP_PORT_RANGE and GLOBUS_UDP_PORT_RANGE.
## default: random port
#globus_udp_port_range=9000,12000

## firewall = hostname - The hostname or IP address to use in response to PASV command
## instead of the IP address of a network interface of computer.
## default: not set
#firewall=my.host.org

### X509 related parameters
## x509_host_key = path - Optional parameter to overwrite [common] block values.
#x509_host_key=/etc/grid-security/hostkey.pem
## CHANGE122: renamed

## x509_host_cert = path - Optional parameter to overwrite [common] block values.
#x509_host_cert=/etc/grid-security/hostcert.pem
## CHANGE123: renamed

## x509_cert_dir = path - Optional parameter to overwrite [common] block values.
#x509_cert_dir=/etc/grid-security/certificates

## pluginpath - directory where the plugin libraries are installed, default is
## CHANGE124: DELETED. hide this parameter from arc.conf. gridftp service should work out-of-the-box on a standard linux installation.
##
##
### end of the [gridftpd] block ###############################


### [gridftpd/jobs] subblock ###############################
## The jobplugin of the gridftp server implements a custom
## job management and submission interface of ARC CE.
## This subblock enables and configures that interface.
## Consult the Technical Reference within the ARC sysadmin guide
## for the interface specification.
## Comment out this subblock if you don't want a gridftp-based jobinterface.
#[gridftpd/jobs]

## path virtdir - The path to the virtual gridftpd directory which is used during the
## CHANGE125: DELETED. remove this flexibility. the "/jobs" string must be hardcoded in the server.

## plugin name - specifies name of shared library to be loaded relative to "pluginpath".
## CHANGE126: DELETED. hide it from sysadmin. make the plugin loading/configuration automatic. if a gridftpd/jobs block is enabled, load the right plugin automatically.

## allownew = yes/no - This parameter sets if the ARC CE  accepts submission of new jobs
## via the gridftp interface. This parameter can be used to close down the ARC CE.
## allowedvalues: yes no
## default: yes
#allownew=yes

## allownew_override = [authgroup ...]  - (previously allowsubmit) Defines which authorization
## groups are allowed to submit new jobs via the gridftp interface
## when the CE is closed with allownew=no. Note that it requires the allownew=no to be set.
## multivalued
## default: not set
#allownew_override=biousers atlasusers
#allownew_override=yourauthgroup
## CHANGE127: rename. modify behaviour: possible to specify several groups on a single line!

## allowaccess = authgroup [authgroup ...] - (previously groupcfg) Specifies authorization groups
## that are allowed to access the gridftp-based jobsubmission interface.
## If this parameter is not set, then no additional restrictions are applied for authorizing
## user access.
## The matching group is also used for evaluating VOMS attributes representing the user.
## default: not set
#allowaccess=biousers atlasusers
## CHANGE128: renamed

## remotegmdirs controldir sessiondir - Specifies control
## and session directories to which jobs can be submitted but which are
## under the control of another A-REX.
## CHANGE129: DELETED. remove feature and config parameter.

## maxjobdesc = size - specifies maximal allowed size of job description
## in bytes. Default value is 5MB. Use 0 to set unlimited size.
## default: 5242880
#maxjobdesc=0

## configfile service_configuration_path - If [gridftpd] and [arex]
## configuration parts are located in separate files this configuration
## CHANGE130: DELETED.
##
##
### end of [gridftpd/jobs] block #####################################


### [gridftpd/filedir] block #########################################
## The fileplugin module of the gridftp server can be used to set up a
## simplistic grid storage element (SE). This subblock enables and configures
## such an SE by "exporting" a directory using the gridftpd's fileplugin.
## Comment out this block if you don't need a SE.
#[gridftpd/filedir]

## plugin name - specifies name of shared library to be loaded relative to
## CHANGE131: DELETED. hide it from sysadmin. make the plugin loading/configuration automatic. if a gridftpd/filedir block is enabled, load the right plugin automatically.

## allowaccess = authgroup [authgroup ...] - (previously groupcfg) Specifies authorization groups
## that are allowed to access the gridftp-based jobsubmission interface.
## If this parameter is not set, then no additional restrictions are applied for authorizing
## user access.
## default: not set
#allowaccess=biousers atlasusers
## CHANGE132: renamed

## *path = virtdir - The name of the virtual directory served by the gridftp server.
## The exported storage area is accessible as gsiftp://my_server/virtdir.
## Even "/" is a valid choice.
## default: not set
#path=/topdir

## *mount = path - The physical directory corresponding to the virtual one:
## gsiftp://my_server/virtdir will give access to this location.
## default: not set
#mount=/scratch/grid

## dir = path options - Specifies access rules for accessing files in 'path'
##           (relative to virtual and real path) and all the files and directories below.
## 'options' are:
##       nouser  - do not use local file system rights, only use those
##                 specifies in this line
##       owner   - check only file owner access rights
##       group   - check only group access rights
##       other   - check only "others" access rights
## if none of the above specified usual unix access rights are applied.
##       read    - allow reading files
##       delete  - allow deleting files
##       append  - allow appending files (does not allow creation)
##       overwrite - allow overwriting already existing files (does not
##                 allow creation, file attributes are not changed)
##       dirlist - allow obtaining list of the files
##       cd      - allow to make this directory current
##       create owner:group permissions_or:permissions_and  - allow creating
##                 new files. File will be owned by 'owner' and owning group
##                 will be 'group'. If '*' is used, the user/group to which
##                 connected user is mapped will be used. The permissions
##                 will be set to permissions_or & permissions_and. (second
##                 number is reserved for the future usage).
##
##       mkdir owner:group permissions_or:permissions_and  - allow creating new directories.
## multivalued
## default: not set
## some examples:
## Set permissions on mounted directory
#dir=/ nouser read cd dirlist delete create *:* 664:664 mkdir *:* 775:775
## Adjust permissions on some subdirectories
#dir=/section1 nouser read mkdir *:* 700:700 cd dirlist
#dir=/section2 nouser read mkdir *:* 700:700 cd dirlist
##
##
### end of [gridftpd/filedir] block #####################################


### The [infosys] block ################################################
## This block enables and configures the main part of the information system.
## Parameters in this block applies to all the infosys subsystems.
#[infosys]

## logfile = path - (previously providerlog) Specifies log file location for the information
## provider scripts.
## default: /var/log/arc/infoprovider.log
#logfile=/var/log/arc/infoprovider.log
## CHANGE133: renamed

## loglevel = number - (previously provider_loglevel) The loglevel for the infoprovider scripts (0-5).
## The default is 1 (critical errors are logged)
## Each value corresponds to the following verbosity levels:
## FATAL => 0, ERROR => 1 , WARNING => 2, INFO => 3, VERBOSE => 4, DEBUG => 5
## allowedvalues: 0 1 2 3 4 5
## default: 1
#loglevel=2
## CHANGE134: renamed

## overwrite_config yes|no - determines if the infosys startup scripts
## should generate new low-level slapd configuration files.
## CHANGE135: DELETED.  This functionality got lost during the years. startup scripts don't support this feature any longer

## oldconfsuffix .suffix - sets the suffix of the backup files of the low-level slapd config files.
## CHANGE136: DELETED. This functionality got lost during the years. startup scripts don't support this feature any longer

## debug - sets the debug level/verbosity of the startup script {0 or 1}.
## CHANGE137: DELETED.

## infosys_compat - Setting this variable will cause ARC to use the old
## infoproviders. NOTE: this only applies to ARC < 13.11. Old infoproviders
## CHANGE138: DELETED. not relevant for a very long time by now.

## cachetime affects old infoproviders, and forces the validity time of the record.
## CHANGE139: DELETED. not parsed any longer.

## giis_fifo - path to fifo used by EGIIS. default is /var/run/arc/giis-fifo
## CHANGE140: DELETED. hardcode it in startupscript!

## user = unix_user - the unix user running the infosys processes such as
## the slapd, the registrations and infoprovider scripts.
## By default the system ldap-user is used, you can run it as root if you wish.
## In case of non-root value you must make sure that the A-REX
## directories and their content are readable by the 'unix_user' and the 'unix_user'
## has access to the full LRMS information including jobs submitted by
## other users. The A-REX directories (controldir, sessiondir
## runtimedir, cachedir) are specified in the [arex] block
## default: the ldap_user
#user=root

## validity_ttl = seconds - The published infosys records advertises their
## validity e.g. how long the info should be considered up-to-date by the clients.
## Use this parameter to set the published validity value. The same value applied to
## all the infosys records. In case of the GLUE2 schema, this number appears "as is"
## in the GLUE2 Validity fields.
## default: 10800
#validity_ttl=10800
##
##
### end of [infosys] block #################################################


### The [infosys/ldap] block ################################################
## This infosys subblock enables and configures the ldap hosting service
## for the infosys functionality. Using an LDAP server with some schema is one way to
## publish information about your Computing Element.
## Comment out this block if you don't want to run an LDAP-based information system.
#[infosys/ldap]
## CHANGE141: new block

## *hostname = FQDN - the hostname of the machine running the slapd service
## will be the bind for slapd. If not present, will be taken from the [common]
## default: taken from [common]
#hostname=my.testbox

## slapd_hostnamebind = string - May be used to set the hostname part of the
## network interface to which the slapd process will bind. Most of
## the cases no need to set since the hostname parameter is already
## sufficient. The example below will bind the slapd
## process to all the network interfaces available on the server.
## default: not set
#slapd_hostnamebind=*

## port = port_number - The port on which the slapd service runs. The default
## infosys port is assumed to be 2135 by many clients, therefore think twice before you change it!
## default: 2135
#port=2135

## slapd = path - Configure where the slapd command is located.
## default: /usr/sbin/slapd
#slapd=/usr/sbin/slapd

## slapadd = path - Configure where the slapadd command is located.
## default: /usr/sbin/slapdd
#slapadd=/usr/sbin/slapadd

## slapd_loglevel = number - Sets the native slapd loglevel (see man slapd).
## Slapd logs via syslog. The default is set to no-logging (0) and it is
## RECOMMENDED not to be changed in a production environment.
## Non-zero slap_loglevel value causes serious performance decrease.
## default: 0
#slapd_loglevel=0

## threads = number - The native slapd threads parameter, default is 32.
## If you run an Index service too, you should increase this value.
## default: 32
#threads=128

## timelimit = seconds - The native slapd timelimit parameter. Maximum number of seconds
## the slapd server will spend answering a search request.
## Default is 3600. You probably want a much lower value.
## default: 3600
#timelimit=1800

## idletimeout = seconds - The native slapd idletimeout parameter. Maximum number of
## seconds the slapd server will wait before forcibly closing idle client
## connections. It's value must be larger than the value of "timelimit" option.
## If not set, it defaults to timelimit + 1.
## default: timelimit + 1
#idletimeout=1800

## giis_location - If giis_location is not set, ARC_LOCATION will be used instead.
## CHANGE142: DELETED.

## slapd_cron_checkpoint - LDAP checkpoint enable/disable
## This option was introduced to solve bug #2032, to reduce the number
## of log files produced by BDII.
## CHANGE143: DELETED. not relevant any longer.

## db_archive - path to slapd_db_archive binary
## Only used by the above LDAP checkpoint option
## default: /usr/sbin/slapd_db_archive
#db_archive=/usr/sbin/slapd_db_archive
## CHANGE144: DELETED. not relevant any longer.

## db_checkpoint - path to slapd_db_checkpoint binary
## Only used by the above LDAP checkpoint option
## default: /usr/sbin/slapd_db_checkpoint
#db_checkpoint=/usr/sbin/slapd_db_checkpoint
## CHANGE145: DELETED. not relevant any longer.

## infosys_ldap_run_dir = path - The location where NorduGrid/GLUE2 LDAP ldif file
## will be generated, and where the fifo to sync between infoproviders
## and BDII will be generated.
## default: /var/run/arc/infosys/
#infosys_ldap_run_dir=/var/run/arc/infosys/

## ldap_schema_dir = path - Allows to explicitly specify an additional path to the schema
## files. Note that this doesn't override standard location, but adds
## the specified path to the standard locations /etc/ldap and /etc/openldap.
## Normally it is sufficient to use only standard schema file locations,
## therefore not to set this parameter.
## default: not set
#ldap_schema_dir=/nfs/ldap/schema/

## infosys_nordugrid enable - These three variables decide which schema should be used for
## CHANGE146: DELETED. subblocks are used to enable/disable schema-specific publishing.
##
##
### end of [infosys/ldap] block #######################################################


### The [infosys/ldap/bdii] subblock ################################################
## This block configures the third-party bdii parameters. BDII is the underlying technology
## behind the LDAP-based infosys. 99% of cases no need to set anything in this subblock
## and use the available defaults. Nevertheless the subblock itself must be enabled!
## These variables are usually automatically set by ARC, and
## are here mostly for debug purposes and to tweak exotic
## BDII installations.
#[infosys/ldap/bdii]
## CHANGE147: new block

## bdii_debug_level = level - Set this parameter to DEBUG to check bdii errors in bdii-update.log
## At the same time don't enable slapd logs this way reducing performance issues.
## default: ERROR
#bdii_debug_level=ERROR

## provider_timeout = seconds - This variable allows a system administrator to
## modify the behaviour of bdii-update. This is the time BDII waits
## for the scripts generated by A-REX infoproviders to produce
## their output.
## default: 10800
#provider_timeout=10800

## BDII5 uses these variables. These might change depending on BDII version.
## ARC sets them by inspecting distributed bdii configuration files.
## DO NOT CHANGE UNLESS YOU KNOW WHAT YOU'RE DOING

## bdii_location = path - The installation directory for the BDII.
## default: /usr
#bdii_location=/usr

## bdii_run_dir = path - Contains BDII pid files and slapd pid files
## default: /var/run/arc/bdii
#bdii_run_dir=/var/run/arc/bdii

## bdii_log_dir = path - Contains infosys logs
## default: /var/log/arc/bdii
#bdii_log_dir=/var/log/arc/bdii

## bdii_tmp_dir = path - Contains provider scripts
## default: /var/tmp/arc/bdii
#bdii_tmp_dir=/var/tmp/arc/bdii

## bdii_var_dir = path - Contains slapd databases
## default: /var/lib/arc/bdii
#bdii_var_dir=/var/lib/arc/bdii

## bdii_update_pid_file = path  - Allows to change bdii-update
## pidfiles filename and location
## default: $bdii_run_dir/bdii-update.pid
#bdii_update_pid_file=/var/run/arc/bdii/bdii-update.pid

## slapd_pid_file path - Allows to change slapd pidfiles filename and location
## default: $bdii_run_dir/db/slapd.pid
## This does not exist - scripts uses $bdii_run_dir/db/slapd.pid always
## CHANGE148: DELETED

## bdii_database = backend_type - Configure what ldap database backend should be used.
## default: hdb
#bdii_database=hdb

## bdii_conf = path - Location of the bdii config file generated by ARC.
## default: $infosys_ldap_run_dir/bdii.conf
#bdii_conf=/var/run/arc/infosys/bdii.conf

## bdii_update_cmd = path - path to bdii-update script
## default: ${bdii_location}/sbin/bdii-update
#bdii_update_cmd=/usr/sbin/bdii-update

## bdii_db_config = path - path to slapd database configuration file
## default: /etc/bdii/DB_CONFIG
#bdii_db_config=/etc/bdii/DB_CONFIG

## bdii_archive_size = number - Sets BDII_ARCHIVE_SIZE in bdii configuration file
## default: 0
#bdii_archive_size=0

## bdii_breathe_time = number - Sets BDII_BREATHE_TIME in bdii configuration file
## default: 10
#bdii_breathe_time=10

## bdii_delete_delay = number - Sets BDII_DELETE_DELAY in bdii configuration file
## default: 0
#bdii_delete_delay=0

## bdii_read_timeout = number - Sets BDII_READ_TIMEOUT in bdii configuration file
## default: $provider_timeout + $infoproviders_timelimit + $wakeupperiod
#bdii_read_timeout=300

## bindmethod = value - Information about how to authenticate to the registered information server
## ANONYM-ONLY is the only valid value
## (It is hardcoded in the index server anyway - so value in the registartion
## record is ignored)
## default: ANONYM-ONLY
## allowedvalues: ANONYM-ONLY
#bindmethod=ANONYM-ONLY

## cachettl = number - cachettl affects registration to egiis
## The value is reported back by the index server as Mds-Service-Ldap-cachettl
## Default is zero, i.e. no limits are set.
## default: 0
#cachettl=0
##
##
### end of the [infosys/ldap/bdii] block ########################################


## Infosys Schema sub-blocks: The following infosys sub-blocks enable
## information publishing according to various information schema.
## In order to publish information in a certain schema, the corresponding
## sub-block must be defined in addition to the schema-neutral [cluster] and [queue/name] blocks!
## Comment out a specific schema block if you don't want to publish a specific
## information schema representation.
## Currently available information model (schema) sub-blocks:
##  [infosys/nordugrid] - The native ARC info representation of a cluster and its queues
##  [infosys/glue2] - The GLUE2 information model, both LDAP and XML (the latter is for WS-interface)
##  [infosys/glue2/ldap] - The LDAP rendering of the GLUE2 model
##  [infosys/glue1] - The legacy GLUE1 model (only LDAP)
##  [infosys/glue1/site:name] - The site BDII element of the GLUE1 legacy model


### The [infosys/nordugrid] schema sub-block ###########################
## Enables the publication of the NorduGrid information model in
## the LDAP-based infosys. See the NORDUGRID-TECH-4 for schema definition.
## The configuration block does not contain any parameter. The information tree
## is populated based on the contents of the schema-neutral [cluster] and [queue/name] blocks.
#[infosys/nordugrid]
## CHANGE155: new schema block. should be used to turn on/off nordugrid-ldap publication.
##
##
### end of the [infosys/nordugrid] schema block ########################


### The [infosys/glue2] schema sub-block ###########################
## Enables the publication of the GLUE2 information model both in the LDAP and
## XML rendering.
## The information tree is populated based on the contents of the schema-neutral 
## [cluster] and [queue/name] blocks and the GLUE2 specific schema sub-blocks.
#[infosys/glue2]
## CHANGE156: new schema block. should be used to turn on/off GLUE2 publication (both ldap & xml)

## AdminDomain entity parameters:
## admindomain_name = string - The Name attribute for the admindomain. This will show
## in top-BDII to group the resources belonging to this cluster.
## To group a bunch of clusters under the same AdminDomain, just use the same name.
## If not specified, will default to UNDEFINEDVALUE.
## default: UNDEFINEDVALUE
#admindomain_name=ARC-TESTDOMAIN

## admindomain_description = text - The free-form description of this domain.
## default: not set
#admindomain_description=ARC test Domain

## admindomain_www = url - The URL pointing at a site holding information about the AdminDomain.
## default: not set
#admindomain_www=http://www.nordugrid.org/

## admindomain_distributed = yes/no - Set this to yes if the domain is distributed
## that means, if the resources belonging to the domain
## are considered geographically distributed.
## allowedvalues: yes no
## default: ???
#admindomain_distributed=yes

## admindomain_owner = email - The contact email of a responsible person for the domain
## default: not set
#admindomain_owner=admin@nordugrid.org

## admindomain_otherinfo = text - Free-form text that fills the OtherInfo GLUE2 field.
## no need to set, used only for future development.
## default: not set
#admindomain_otherinfo=Test Other info

## ComputingService entity parameters:
## computingservice_qualitylevel = qlevel - (previously infosys_glue2_service_qualitylevel)
## Allows a sysadmin to define different GLUE2 QualityLevel values for A-REX.
## Refer to GLUE2 documentation for the qualitylevel definitions.
## allowedvalues: production pre-production testing development
## default: production
#computingservice_qualitylevel=production
## CHANGE157: renamed
##
##
## end of the [infosys/glue2] schema block ########################


### The [infosys/glue2/ldap] schema sub-block ###########################
## Enables the publication of the LDAP-rendering of the GLUE2 infomodel.
## The information tree is populated based on the contents of the schema-neutral
## [cluster] and [queue/name] blocks and the GLUE2 specific schema sub-blocks.
#[infosys/glue2/ldap]
## CHANGE158: new schema block. should be used to turn on/off GLUE2 LDAP tree publication.

## infosys_glue2_ldap - Enables GLUE2 schema
## CHANGE: DELETED. use block instead.

## showactivities = yes/no - (previously infosys_glue2_ldap_showactivities) Enables GLUE2
## ComputingActivities to appear in the LDAP rendering
## allowedvalues: yes no
## default: no
#showactivities=no
## CHANGE160: renamed.
##
##
### end of the [infosys/glue2/ldap] schema sub-block ###########################


### The [infosys/glue1] (previously [infosys/glue12]) schema block ##########
## This block enables the publication of GLUE1 LDAP representation of a CE.
## The information tree is populated based on the contents of the schema-neutral
## [cluster] and [queue/name] blocks and the GLUE1 specific schema sub-blocks.
## This block holds information that is needed by the glue1, in addition to the
## schema-neutral blocks.
#[infosys/glue1]
## CHANGE161: renamed. should be used to turn on/off GLUE1 publication.

## infosys_glue12 - Enables glue1.2/1.3 schema
## CHANGE162: DELETED. use block instead

## resource_location = string - GLUE1 location attribute.
## IMPORTANT: no slashes or backslashes here!
## default: not set
#resource_location=Kastrup, Denmark

## resource_latitude = latitude - GLUE1 latitude.
## default: not set
#resource_latitude=55.75000

## resource_longitude = longitude - GLUE1 longitude.
## default: not set
#resource_longitude=12.41670

## cpu_scaling_reference_si00 = number - GLUE1 CPU_scaling
## default: not set
#cpu_scaling_reference_si00=2400

## processor_other_description = string - GLUE1 proc description
## default: not set
#processor_other_description=Cores 3, Benchmark 9.8-HEP-SPEC06

## glue_site_web = url - GLUE1 site web url
## default: not set
#glue_site_web=http://www.ndgf.org

## glue_site_unique_id = siteid - GLUE1 site id
## default: not set
#glue_site_unique_id=NDGF-T1

## provide_glue_site_info yes/no - This variable decides if the GlueSite should be published.
## CHANGE163: DELETED.  disabled if one or more [infosys/glue1/site:name]
##                      blocks exist, otherwise enabled.
##
##
### end of the [infosys/glue1] schema block ###########################


### The [infosys/glue1/site:name] (previously [infosys/site/sitename]) block ################
## Enable this block ONLY if you want to publish a semi-fake GLUE1 site-bdii as part of
## the LDAP server. This block is used to configure ARC to generate a
## semi-fake site-bdii that can be registered in GOCDB etc... The sitename
## part of the block header is to be declarative of the site-bdii being generated.
##
#[infosys/glue1/site:name]
## CHANGE164: renamed. turn on/off the fake site-bdii based on this block.

## unique_id = id - The unique id used to identify this site, eg "NDGF-T1"
## default: not set
#unique_id=NDGF-T1

## url = url - The url of the resource BDII underlying the fake site bdii. It is on the format:
## ldap://host.domain:2170/mds-vo-name=something,o=grid.
## default: not set
#url=ldap://host.domain:2170/mds-vo-name=something,o=grid
##
##
### end of the [infosys/glue1/site:name] block ###################################



## Information schema-neutral blocks [cluster] and [queue/NAME] contain attributes
## that describe the computing cluster together with its queues. The parameters are
## available for every information model/schema representation.

### The [cluster] block ###################################################
## This block describes the cluster characteristics of a Computing Element.
## The information specified here is mostly used by the Infosys ARC component.
#[cluster]

## alias = text - An arbitrary alias name of the cluster, optional.
## default: not set
#cluster_alias=Big Blue Cluster in Nowhere

## hostname = fqdn - Set the FQDN of the frontend.
## default: uses the value of the [common] block
#hostname=myhost.org

## interactive_contactstring = url - the contact URL for interactive logins, set this
## if the cluster supports some sort of grid-enabled interactive login (gsi-ssh),
## multivalued
## default: not set
#interactive_contactstring=gsissh://frontend.cluster:2200

## comment = text - Free text field for additional comments on the cluster in a single
## line, no newline character is allowed!
## default: not set
#comment=This cluster is specially designed for XYZ applications: www.xyz.org

## cluster_location = formatted_string - The geographical location of the cluster, preferably
## specified as a postal code with a two letter country prefix
## default: not set
#cluster_location=DK-2100

## cluster_owner = text - It can be used to indicate the owner of a resource, multiple
## entries can be used
## multivalued
## default: not set
#cluster_owner=World Grid Project
#cluster_owner=University of NeverLand

## authorizedvo  = vo_name - This attribute is used to advertise which VOs are authorized
## on the cluster.
## Add only one VO for each authorizedvo entry. Multiple VOs in the same line
## will cause errors.
## These entries will be shown in all GLUE2 AccessPolicy and MappingPolicy
## objects, that is, they will apply for all Endpoints(Interfaces) and all
## Shares(currently queues).
## The information is also published in the NorduGrid schema.
## multivalued
## default: not set
#authorizedvo=developer.nordugrid.org
#authorizedvo=community.nordugrid.org
## TODO: it was suggested to rename it as advertisedvo or something similar

## clustersupport = email - This is the support email address of the resource.
## multivalued
## default: not set
#clustersupport=grid.support@mysite.org
#clustersupport=grid.support@myproject.org

## homogeneity = True/False - Determines whether the cluster consists of identical NODES with
## respect to  cputype, memory, installed software (opsys). The frontend is NOT
## needed to be homogeneous with the nodes. In case of inhomogeneous nodes, try
## to arrange the nodes into homogeneous groups assigned to a queue and use
## queue-level attributes.
## False will trigger multiple GLUE2 ExecutionEnvironments to be published
## if applicable.
## allowedvalues: True False
## default: True
#homogeneity=True

## architecture = string - Sets the hardware architecture of the NODES. The "architecture"
## is defined as the output of the "uname -m" (e.g. i686). Use this cluster
## attribute if only the NODES are homogeneous with respect to the architecture.
## Otherwise the queue-level attribute may be used for inhomogeneous nodes. If
## the frontend's architecture agrees to the nodes, the "adotf" (Automatically
## Determine On The Frontend) can be used to request automatic determination.
## default: not set
#architecture=adotf

## opsys = formatted_string - This multivalued attribute is meant to describe the operating system
## of the computing NODES. Set it to the opsys distribution of the NODES and not
## the frontend! opsys can also be used to  describe the kernel or libc version
## in case those differ from the originally shipped ones. The distribution name
## should be given as distroname-version.number, where spaces are not allowed.
## Kernel version should come in the form kernelname-version.number.
## If the NODES are inhomogeneous with respect to this attribute do NOT set it on
## cluster level, arrange your nodes into homogeneous groups assigned to a queue
## and use queue-level attributes.
## opsys will be used to fill GLUE2 OSName, OSVersion and OSFamily unless
## these values are explicitly defined. See below for their usage.
## multivalued
## default: not set
#opsys=Linux-2.6.18
#opsys=glibc-2.5.58
#opsys=CentOS-5.6

## nodecpu = formatted_string - This is the cputype of the homogeneous nodes. The string is
## constructed from the /proc/cpuinfo  as  the value of "model name"  and "@" and
## value of "cpu MHz". Do NOT set this attribute on cluster level if the NODES
## are inhomogeneous with respect to cputype, instead arrange the nodes into
## homogeneous groups assigned to a queue and use queue-level attributes. Setting
## the nodecpu=adotf will result in Automatic Determination On The Frontend,
## which should only be used if the frontend has the same cputype as the
## homogeneous nodes.
## default: not set
#nodecpu=AMD Duron(tm) Processor @ 700 MHz

## nodememory = number - This is the amount of memory (specified in MB) on the node
## which can be guaranteed to be available for the application. Please note
## in most cases it is less than the physical memory installed in the nodes.
## Do NOT set this attribute on cluster level if the NODES are inhomogeneous
## with respect to their memories, instead arrange the nodes into homogeneous
## groups assigned to a queue and use queue-level attributes.
## This value is used by LRMS backend scripts to put in the job script if the
## 'lrms/defaultmemory' attribute is not specified.
## default: not set
#nodememory=512

## benchmark = name value - This optional multivalued attribute can be used to
## specify benchmark results on the cluster level. Use this cluster attribute
## if only the NODES are homogeneous with respect to the benchmark performance.
## Otherwise the similar queue-level attribute should be used. Please try to
## use standard benchmark names, if possible.
## multivalued
## default: not set
#benchmark=SPECINT2000 222
#benchmark=SPECFP2000 333

## middleware = string - The multivalued attribute shows the installed grid software on
## the cluster, nordugrid and globus-ng  is automatically set, no need to specify
## middleware=nordugrid or middleware=globus
## multivalued
## default: not set
#middleware=my grid software

## nodeaccess = inbound/outbound - Determines how the nodes can connect to the internet.
## Not setting anything means the nodes are sitting on a private isolated network.
## "outbound" access means the nodes can connect to the outside world while
## "inbound" access means the nodes can be connected from outside.
## inbound & outbound access together means the nodes are sitting on a fully open network.
## multivalued
## default: not set
## allowedvalues: inbound outbound
#nodeaccess=inbound
#nodeaccess=outbound

## localse = url - This multivalued parameter tells the BROKER that certain URLs (and
## locations below that) should be considered "locally" available to the cluster.
## multivalued
## default: not set
#localse=gsiftp://my.storage/data1/
#localse=gsiftp://my.storage/data2/

## gm_mount_point - this is the same as the "path" from the [gridftpd/jobs]
## CHANGE150: DELETED. hardcode "jobs" in the infoproviders.

## gm_port - this is the same as the "port" from the [gridftpd] block. The
## CHANGE151: DELETED. hardcode 2811 in the infoproviders.

## cpudistribution = formatted_string - This is the CPU distribution over nodes
## given in the form: ncpu:m where
##   n is the number of CPUs per machine
##   m is the number of such computers
## Example: 1cpu:3,2cpu:4,4cpu:1 represents a cluster with
## 3 single CPU machines, 4 dual CPU machines, one machine with 4 CPUs.
## default: not set
#cpudistribution=1cpu:3,2cpu:4,4cpu:1
##
##
### end of the [cluster] block #####################


### The [queue:name] blocks #######################################
## Each grid-enabled queue on the cluster should be represented and described
## by a separate queue block. The queue_name should be used as a label in the block name.
## In case of fork, or other LRMSes with no queue names, just use any unique string.
## A queue can represent a PBS/LSF/SGE/SLURM/LL queue, a SGE pool, a Condor
## pool or a single machine in case 'fork' type of LRMS.
## This block describes the queue characteristics.
#[queue:gridlong]

## name  string - Sets the name of the grid-enabled queue. It MUST match the name
## label from the queue block header.
## default: not set
#name=gridlong
## CHANGE187: DELETED. use the name in the block header instead!

## homogeneity = True/False - determines whether the queue consists of identical NODES with
## respect to  cputype, memory, installed software (opsys).
## In case of inhomogeneous nodes, try to arrange the nodes into homogeneous
## groups and assigned them to a queue.
## Possible values: True,False, the default is True.
## allowedvalues: True False
## default: True
#homogeneity=True

## scheduling_policy = MAUI/FIFO - This optional parameter tells the scheduling policy of
## the queue. For example, PBS by default offers the FIFO scheduller, many sites run the MAUI.
## At the moment FIFO & MAUI is supported. If you have a MAUI scheduller you
## should specify the "MAUI" value since it modifies the way the queue resources
## are calculated.  BY default the "FIFO" sceduller is assumed.
## allowedvalues: FIFO MAUI
## default: FIFO
#scheduling_policy=FIFO

## comment = text - A free-form text field for additional comments on the queue in a single
## line, no newline character is allowed!
## default: not set
#comment=This queue is nothing more than a condor pool

## pbs_queue_node = string - (previously queue_node_string) In PBS you can assign nodes
## to a queue (or a queue to nodes) by using the "node property" PBS node config method
## and assigning the marked nodes to the queue
## (setting the resources_default.neednodes = queue_node_string for that queue).
## This parameter should contain the "node property" string of the queue-assigned nodes.
## Setting the queue_node_string changes how the queue-totalcpus, user freecpus are
## determined for this queue.
## Essentially, pbs_queue_node value is used to construct nodes= string in
## PBS script, such as nodes=count:queue_node_string where count is taken from
## the job description (1 if not specified). You shouldn't use this option unless
## you are sure that your PBS configuration makes use of the above configuration.
## Read NorduGrid PBS instructions for more information:
##    http://www.nordugrid.org/documents/pbs-config.html
## default: not set
#pbs_queue_node=gridlong_nodes
#pbs_queue_node=ppn=4:ib
## CHANGE152: renamed

## sge_jobopts = string - Additional SGE options to be used when submitting jobs to SGE
## from this queue.
## default: not set
#sge_jobopts=-P atlas -r yes

## condor_requirements = string - It needs to be defined for each Condor queue.
## Use this option to determine which nodes belong to the current queue.
## The value of 'condor_requirements' must be a valid constraints string
## which is recognized by a condor_status -constraint '....' command. It can
## reference pre-defined ClassAd attributes (like Memory, Opsys, Arch, HasJava,
## etc) but also custom ClassAd attributes.  To define a custom attribute on a
## condor node, just add two lines like the ones below in the `hostname`.local
## config file on the node:
##   NORDUGRID_RESOURCE=TRUE
##   STARTD_EXPRS = NORDUGRID_RESOURCE, $(STARTD_EXPRS)
## A job submitted to this queue is allowed to run on any node which satisfies
## the 'condor_requirements' constraint.  If 'condor_requirements' is not set,
## jobs will be allowed to run on any of the nodes in the pool. When configuring
## multiple queues, you can differentiate them based on memory size or disk
## space, for example.
## default: not set
#condor_requirements=(OpSys == "linux" && NORDUGRID_RESOURCE && Memory >= 1000 && Memory < 2000)

## totalcpus = number - Manually sets the number of cpus assigned to the queue. No need to
## specify the parameter in case the queue_node_string method was used to assign
## nodes to the queue (this case it is dynamically calculated and the static
## value is overwritten) or when the queue have access to the entire cluster
## (this case the cluster level totalcpus is the relevant parameter).
## default: not set
#totalcpus=32

## queue-level configuration parameters: nodecpu, nodememory, architecture, opsys
## and benchmark should be set if they are homogeneous over the nodes assigned
## to the queue AND they are different from the cluster-level value.
## Their meanings are described in the [cluster] block. Usage: this queue collects
## nodes with "nodememory=512" while another queue has nodes with
## "nodememory=256" -> don't set the cluster attributes but use the queue-level
## attributes. When the frontend's architecture or cputype agrees with the queue
## nodes, the "adotf" (Automatically Determine On The Frontend) can be used to
## request automatic determination of architecture or nodecpu.
## For GLUE2, fine tune configuration of OSName, OSVersion, OSFamily
## is allowed in a dedicated subblock.

## nodecpu = formatted_string - see description at [cluster] block
## default: not set
#nodecpu=AMD Duron(tm) Processor @ 700 MHz

## nodememory = number - see description at [cluster] block
## default: not set
#nodememory=512

## architecture = string - see description at [cluster] block
## default: not set
#architecture=adotf

## opsys = formatted_string - see description at [cluster] block
## multivalued
## default: not set
#opsys=Linux-2.6.18
#opsys=glibc-2.5.58

## osname = string - Only for GLUE2
## multivalued
## default: not set
#osname=Ubuntu

## osversion = string - Only for GLUE2
## default: not set
#osversion=12.04

## osfamily = string - Only for GLUE2
## default: not set
#osfamily=linux

## benchmark = name value - see description at [cluster] block
## multivalued
## default: not set
#benchmark=SPECINT2000 222
#benchmark=SPECFP2000 333

## allowaccess = authgroup [authgroup ...] - Specifies authorization groups
## that are allowed to submit jobs to this queue. It does not override simular 
## parameter specified in [gridftpd/jobs] and [arex/ws/emies] blocks.
## If this parameter is not set, then no additional restrictions are applied for
## authorizing user abbility to submit jobs to this queue.
## The matching group from this parameter does not affect which VOMS
## attributes are selected as representing the user.
## default: not set
#allowaccess=biousers atlasusers
## CHANGE214: NEW parameter in the [queue:name] block

## authorizedvo = voname - This attribute is used to advertise which VOs are authorized
## on each specific queue. Multiple entries are allowed.
## Add only one VO for each authorizedvo entry. Multiple VOs in the same line
## will cause errors.
## These entries will be shown in the MappingPolicy objects, that is,
## they will apply for the Shares that corresponds to the queue.
## NOTE: if you have also configured authorizedvo in the [cluster] block,
## the result authorized VOs per queue is the union set of what is
## contained in the [cluster] and in this [queue] block.
## IMPORTANT: This parameter is NOT enforcing any access control, it is just for
## information publishing!
## multivalued
## default: not set
#authorizedvo=LocalUsers
#authorizedvo=atlas
#authorizedvo=community.nordugrid.org
## TODO: it was suggested to rename this as advertisedvo

## maxslotsperjob = number - This GLUE2 specific parameter configures the MaxSlotsPerJob value
## on a particular queue. This value is usually generated by LRMS infocollectors,
## but there are cases in which a system administrator might like to tweak it.
## Default is to publish what is returned by the LRMS, and if nothing is
## returned, NOT to publish the MaxSlotsPerJob attribute.
## If a system administrator sets the value here, that value will be
## published instead, regardless of what the LRMS returns.
## Each LRMS might have a different meaning for this value.
## default: not set
#maxslotsperjob=5

## cachetime - LDAP parameters of the queue+jobs+users.pl (old) infoprovider, use the defaults,
## CHANGE153: DELETED.

## sizelimit - affects registration to EGIIS
## CHANGE154: DELETED
##
##
## TODO: add Florido's new variables both to the queue and cluster block (maxcputime and maxwalltime)
##
### end of the [queue:name] blocks ########################



### The [datadelivery-service] block ###############################
##
## This block configures and enables the data delivery service. This service performs data
## transfers on hosts remote to A-REX. Each data delivery service host requires
## this block to be present in its configuration file. If host certificates are
## required (secure=yes) then the corresponding x509 options can be specified
## in [common] if they differ from the default.
#[datadelivery-service]
## CHANGE174: NEW block 

## interface = hostname - Hostname of service host. Specifies hostname on which the service
## listens
## default: all available interfaces
#interface=localhost
## CHANGE175: NEW

## port = port - Port on which service listens
## default: 443
#port=8443
## CHANGE176: NEW

## ipversion = number - IP version to use
## default: 4
#ipversion=6
## CHANGE177: NEW

## pidfile = path - pid file of the daemon
## default: /var/run/arched-datadelivery-service.pid
#pidfile=/tmp/delivery.pid
## CHANGE178: NEW

## logfile = path - log file of the daemon
## default: /var/log/arc/datadelivery-service.log
#logfile=/tmp/delivery.log
## CHANGE179: NEW

## user = username - user under which the service runs (should only be changed in special
## cases)
## default: user starting the service
#user=grid
## CHANGE180: NEW

## secure = yes/no - Set to "no" if the service should run without a host certificate.
## The corresponding deliveryservice parameters in A-REX configuration should
## use http rather than https
## allowedvalues: yes no
## default: yes
#secure=no
## CHANGE181:  NEW

## *allowed_ip = ip - IP address authorized to access service. Normally this is the
## A-REX host IP.
## multivalued
## default: not set
#allowed_ip=1.2.3.4
## CHANGE182: NEW

## allowed_dn = DN - DN authorized to access service. This option restricts access
## to specified DNs (of the users who submit jobs to A-REX). It is only
## effective if secure=yes.
## multivalued
## default: not set
#allowed_dn=/O=Grid/O=Big VO/CN=Main Boss
## CHANGE183: NEW

## *allowed_dir = path - Path the service is allowed to read/write to. This is usually
## one or more cache and/or session directories. See the CE sysadmin guide for
## more information on possible datadelivery service configurations
## multivalued
## default: not set
#allowed_dir=/shared/arc/cache
#allowed_dir=/shared/arc/session
## CHANGE184: NEW
##
##
### end of the [datadelivery-service] block ##############


### The [acix-scanner] (previously [acix/cacheserver]) block ##########
## The ARC Cache Index (ACIX) is a distributed system that maintains
## a catalog of locations of cached files stored in various A-REX caches.
## ACIX consists of two components, the Cache Scanner (on the CEs), and the Index Server.
## This config block enables and configures the cache scanner component of ACIX.
## The scanning component of ACIX runs alongside A-REX.
## It periodically scans the cache directories and composes a Bloom
## filter of A-REX cache content which can be pulled by an ACIX index
## server.
## Comment out this block if you don't want the content of the cache scanned and
## eventually pulled and indexed by ACIX.
#[acix-scanner]
## CHANGE82: renamed block, renamed component (cache scanner, instead of cacheserver)

## logfile = path -  Log file location for the ACIX cache scanner.
## default: /var/log/arc/acix-cachescanner.log
#logfile=/tmp/acix-cachescanner.log
## CHANGE83: modified default for the logfile

## hostname = string - Hostname on which the cache server listens
## default: listen on all available interfaces.
#hostname=myhost.org

## port = port - Port on which the cache server listens
## default: 5443
#port=6000

## cachedump = yes/no - Whether to make a dump of the cache contents in a file at
## $TMP/ARC-ACIX/timestamp each time the cache server runs.
## default: no
## allowedvalues: yes no
#cachedump=yes
##
##
### end of the [acix-scanner] block ############################


### The [acix-index] (previously [acix/indexserver]) block #################################
## The ARC Cache Index (ACIX) is a distributed system that maintains
## a catalog of locations of cached files stored in various A-REX caches.
## ACIX consists of two components, the Cache Scanner (on the CEs), and the Index Server.
## This config block enables and configures the index server component of ACIX.
## The index server component of ACIX collects cache content filters
## from a set of cache scanners configured.
## The index server can be queried for the location of cached files.
## The service endpoint is https://hostname:6443/data/index and a query is
## performed via giving the URLs to check as comma-separated values to the "url" option, e.g.:
## index_service_endpoint?url=http://www.nordugrid.org:80/data/echo.sh,http://my.host/data1
## Comment out this block if you don't run an ACIX Index server.
#[acix-index]

## cachescanner = url - (previously cacheserver) ACIX cache scanners from which to pull information
## multivalued
## default: not set
#cachescanner=https://some.host:5443/data/cache
#cachescanner=https://another.host:5443/data/cache
## CHANGE84: renamed
##
### end of the [acix-index] block ############################



### The [nordugridmap] block ###########################################
## This optional block is used to fine-tune the behavior of the
## nordugridmap utility - an ARC tool used to generate grid-mapfiles.
## Normal setups don't need to configure this block.
## Please refer to [userlist/name] block above to find information how
## to specify sources for userlist generation. This section setup
## general source-independent parameters.
#[nordugridmap]

### X509 related parameters
## x509_host_key = path - Optional parameter to overwrite [common] block values.
#x509_host_key=/etc/grid-security/hostkey.pem
## CHANGE24: renamed

## x509_host_cert = path - Optional parameter to overwrite [common] block values.
#x509_host_cert=/etc/grid-security/hostcert.pem
## CHANGE25: renamed

## x509_cert_dir = path - Optional parameter to overwrite [common] block values.
#x509_cert_dir=/etc/grid-security/certificates

## gridmap_owner = username - The owner of the generated mapfiles.
## default: root
#gridmap_owner=root

## gridmap_group = groupname - The group of generated gridmapfiles.
## default: root
#gridmap_group=root

## gridmap_permissions = filemode - The permissions of generated gridmapfiles.
## default: 0600
#gridmap_permissions=0600

## generate_vomapfile - control is nordugridmap will generate
## vo-mapfile used by arc-ur-logger. Default is 'yes'.
## CHANGE26: DELETED, we don't support arc-ur-logger any longer. don't generate that file any longer either.

## vomapfile - path to vo-mapfile location.
## CHANGE27: DELETED, we don't support arc-ur-logger any longer. don't generate that file any longer either.

## log_to_file = yes/no - control whether logging output of nordugridmap
## will be saved to file. If the value is 'no' nordugridmap will write all 
## information to STDERR.
## allowedvalues: yes no
## default: yes
#log_to_file=no

## logfile = path - specify the nordugridmap log file location when log_to_file is set yes.
## default: /var/log/arc/nordugridmap.log
#logfile=/var/log/arc/nordugridmap.log

## cache_enable = yes/no - Controls whether caching of external sources will be used.
## allowedvalues: yes no
## default: yes
#cache_enable=yes

## cachedir = path - Specifies the path where cached sources will be stored.
## default: /var/spool/nordugrid/gridmapcache/
#cachedir=/var/spool/nordugrid/gridmapcache/

## cachetime = seconds - Controls how long (in seconds) the cached information
## remains valid. Default is 259200 (3 days).
## default: 259200
#cachetime=259200

## issuer_processing - control the behavior of [userlist/name] block's require_issuerdn
## CHANGE28: DELETED

## mapuser_processing = owerwrite/keep - Controls the behavior of [userlist/name] block's mapped_unixid
## parameter usage. Valid values are 'overwrite' and 'keep'.
## Please see 'mapped_unixid' description in [userlist/name] block for details.
## allowedvalues: keep overwrite
## default: "keep"
#mapuser_processing=keep

## allow_empty_unixid = yes/no - Controls whether empty (or unspecified)
## 'mapped_unixid' [userlist/name] block option is allowed to be used.
## Please see 'mapped_unixid' description for details.
## allowedvalues: yes no
## default: yes
#allow_empty_unixid=no
## CHANGE29: MODIFIED. set default to yes.

## voms_method = soap/get - Controls how to get information from VOMS(S) sources.
## Valid values are:
##   soap - call SOAP method directly using SOAP::Lite
##   get  - use old implementation that manually parses XML response
## allowedvalues: soap get
## default: soap
#voms_method=soap

## loglevel = level - (previously debug) Controls the verbosity of nordugridmap output. Valid
## values are:
##   0 - FATAL   - only critical fatal error shown
##   1 - ERROR   - errors, including non-critical are shown
##   2 - WARNING (default) - configuration errors that can be ignored
##   3 - INFO    - processing information
##   4 - VERBOSE - a bit more processing information
##   5 - DEBUG   - lot of processing information
##
## When test run is requested (--test command line option of the
## nordugridmap) loglevel is automatically set to 5 (DEBUG).
## Default is 2 (WARNING)
## allowedvalues: 0 1 2 3 4 5
## default: 4
#loglevel=4
## CHANGE30: renamed as loglevel

## fetch_timeout = seconds - Controls how many time (in seconds) nordugridmap will
## wait for external sources retrieval.
## default: 15
#fetch_timeout=15
##
##
### end of the [nordugridmap] block ##################################





#######################################################################################
#######################################################################################
##########################                           ##################################
##########################  DELETED, OBSOLETE BLOCKS ##################################
##########################                           ##################################
#######################################################################################  
 
 
 
 ### [registration/emir] block #######################################
## Services registration into EMIR block
## configures and enables the registration process of a
## services enabled in this configuration file into EMI
## indexing service (EMIR).
## Currently only implemented for A-REX.
## CHANGE165: DELETED. entire emir registration block is removed from arc.conf. check for code cleanup as well.

## emiurls url - List of URL separated by comma of EMIR services which are to accept
## CHANGE166: DELETED

## validity sec - Time in seconds for which registration records should stay valid.
## CHANGE167: DELETED

## period sec - Time in seconds how othen registration record should be sent to the
## CHANGE168: DELETED

## disablereg_xbes yes/no - disablereg_xbes may be used to selectively disable registration of
## CHANGE169: DELETED
##
##
### end of the [registration/emir] block ############################


### The [infosys/index/indexname] block ################################
## WARNING: the ldap-based Info Index Service, together with the registration
## is OBSOLETE technology, therefore the new config format is not supporting GIIS.
## Use earlier ARC releases if you want to setup an EGIS server.
## CHANGE191: DELETED block, the entire block is deleted.
 
## name - The unique (within the hosting machine) name of the
## CHANGE192: DELETED

## allowregistration - Implements registration filtering within an Index Sevice
## CHANGE193: DELETED
##
### end of the [infosys/index/indexname] block ##############


### The [infosys/index/indexname/registration/registrationname] blocks ####
## WARNING: the ldap-based registration is OBSOLETE technology therefore 
## the new config is not suppoprting seting up GIIS services. Use previous ARC releases for that.
## CHANGE194: DELETED. entire config block is deleted.

## targethostname - the hostname of the machine running the registration target
## CHANGE195: DELETED

## targetport - the port on which the target Index Service is running.
## CHANGE196: DELETED

## targetsuffix - the LDAP suffix of the target Index Service
## CHANGE197: DELETED

## regperiod - The registration period in seconds, the registration messages are
## CHANGE198: DELETED

## registranthostname - the hostname of the machine sending the registrations.
## CHANGE199: DELETED

## registrantport - the port of the slapd service hosting the
## CHANGE200: DELETED

## registrantsuffix - the LDAP suffix of the registrant Index Service.
## CHANGE201: DELETED

## timeout - The suggested timeout to be included in the registration.
## CHANGE202: DELETED

## ttl - The suggested TTL to be included in the registration.  The default
## CHANGE203: DELETED
##
##
### end of the [infosys/index/indexname/registration/registrationname] block #########


### The [infosys/cluster/registration/NAME] blocks ############
## WARNING: the ldap-based registration is OBSOLETE technology
## 
## CHANGE213: DELETED block, all the config options are OBSOLETED and DELETED in this block


## registrationlog = path - specifies the logfile for the registration processes
## initiated by your machine.
## CHANGE212: DELETED

## sizelimit = number - sizelimit affects registration to egiis
## The value is reported back by the index server as Mds-Service-Ldap-sizelimit
#sizelimit=10
## CHANGE212: DELETED

## *targetgiis = name - the name of the index service to which the registration to be sent. 
## CHANGE212: DELETED

## *targethostname = hostname - the hostname of the machine running the registration target
## CHANGE204: DELETED

## targetport = number - the port on which the target Index Service is running.
## CHANGE205: DELETED

## targetsuffix = string - the LDAP suffix of the target Index Service
## CHANGE206: DELETED

## regperiod = seconds - The registration period in seconds, the registration messages are
## CHANGE207: DELETED

## registranthostname = hostname - the hostname of the machine sending the registrations.
## CHANGE208: DELETED

## registrantport = port - the port of the slapd service hosting the
## registrant Index Service. The attribute inherits its value from the
## CHANGE209: DELETED

## registrantsuffix = string - the LDAP suffix of the registrant cluster resource
## It is automatically determined from the [infosys] block and the
## CHANGE210: DELETED

## ttl = seconds - The suggested TTL to be included in the registration.  The default
## CHANGE211: DELETED
##
##
### end of the [infosys/cluster/registration/NAME] blocks ###########

